{
    "swagger" : "2.0",
    "info" : {
      "description" : "<div>\n\t\t\t\t\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\t\t\t\t\tThe AE REST API provides an interface for 3<sup>rd</sup> party\n\t\t\t\t\t\t\t\t\t\t\t\tapplications to interact with the Automation Engine. It allows you to target\n\t\t\t\t\t\t\t\t\t\t\t\tthe AE from many programming languages, not only from Java. The AE REST API\n\t\t\t\t\t\t\t\t\t\t\t\twill eventually expose the most important AE API features for 3<sup>rd</sup>\n\t\t\t\t\t\t\t\t\t\t\t\tparty developers.\n\t\t\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\t\t\t\t\tPlease see the AE Java API if you are looking for a more comprehensive\n\t\t\t\t\t\t\t\t\t\t\t\tAPI.\n\t\t\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t\t\t\t<p>The URI for each request has the form <strong><em>http[s]://{host}:{port}/ae/api/{version}</em></strong>.</p>\n\t\t\t\t\t\t\t\t\t\t\t<ul>\n\t\t\t\t\t\t\t\t\t\t\t\t<li><strong>host</strong>: <em>required (string)</em>The host (IP address or hostname) on which the JCP is running</li>\n\t\t\t\t\t\t\t\t\t\t\t\t<li><strong>port</strong>: <em>required (string)</em>Port of the JCP as configured in the REST section of <em>ucsrv.ini</em></li>\n\t\t\t\t\t\t\t\t\t\t\t\t<li><strong>version</strong>: <em>required (string)</em>API version, must be v1</li>\n\t\t\t\t\t\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\t\t\t\t\tResponses which contain HTTP Status Codes <strong>4xx</strong> through <strong>5xx</strong> signal client / server\n\t\t\t\t\t\t\t\t\t\t\t\terrors. Details are delivered in the response body, formatted as <strong>application/json</strong>.\n\t\t\t\t\t\t\t\t\t\t\t\tDepending on the number of errors, the top level element of responses will\n\t\t\t\t\t\t\t\t\t\t\t\teither be an <strong>array of or a single object of type <em>OutError</em> or <em>OutValidationError</em></strong>.\n\t\t\t\t\t\t\t\t\t\t\t\tPlease see <em>POST /{client_id}/executions [400] and [401]</em> for an example.\n\t\t\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\t\t\t\t\tA <strong>health check</strong> is available under <em>GET /{client_id}/system/health</em>. Be aware that solely the HTTP status code should\n\t\t\t\t\t\t\t\t\t\t\t\tbe used to determine the health (<em>[200] signals healthy</em>, <em>[503] not healthy</em>). A response body is optionally delivered,\n\t\t\t\t\t\t\t\t\t\t\t\tdepending on whether a PWP is currently present or not. If no PWP is present, a body of type <em>OutError</em> is returned,\n\t\t\t\t\t\t\t\t\t\t\t\totherwise it will be of type <em>OutHealthCheck</em>.\n\t\t\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\t\t\t\t\t<strong>Basic Authentication</strong> is used to authenticate users in the system, so make sure the <em>Authorization</em> header\n\t\t\t\t\t\t\t\t\t\t\t\tis present for each request. The user-pass section can be entered in the following 3 formats <strong>USERNAME:PASSWORD</strong>,\n\t\t\t\t\t\t\t\t\t\t\t\t<strong>USERNAME/DEPARTMENT:PASSWORD</strong> and <strong>CLIENT/USERNAME/DEPARTMENT:PASSWORD</strong>. The <strong>character encoding scheme</strong>\n\t\t\t\t\t\t\t\t\t\t\t\tused to convert this section into an octet sequence is expected to be <strong>ISO-8859-1</strong>.\n\t\t\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\t\t\t\t\tThe <strong>internal authorization system</strong> is used to authorize inbound requests. Depending on the endpoint, different\n\t\t\t\t\t\t\t\t\t\t\t\tprivileges and authorizations are needed. If missing, a <em>[403]</em> with details will be returned.\n\t\t\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\t\t\t\t\t\tSome <strong>resources</strong> may be <strong>disabled</strong> till a given precondition is met eg. a mandatory configuration\n\t\t\t\t\t\t\t\t\t\t\t\tparameter is set. A call to a disabled resource yields a <em>[404] with a custom error code and message.</em>\n\t\t\t\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t\t\t\t</div>",
      "version" : "v1",
      "title" : "AE REST API documentation"
    },
    "basePath" : "/api/v1",
    "tags" : [ {
      "name" : "execution"
    }, {
      "name" : "execution comment"
    }, {
      "name" : "execution report"
    }, {
      "name" : "execution variable"
    }, {
      "name" : "forecast"
    }, {
      "name" : "object"
    }, {
      "name" : "ping"
    }, {
      "name" : "repositories"
    }, {
      "name" : "repositories branches"
    }, {
      "name" : "repositories commits"
    }, {
      "name" : "repositories merge"
    }, {
      "name" : "scripts"
    }, {
      "name" : "search"
    }, {
      "name" : "system"
    }, {
      "name" : "system agentgroups"
    }, {
      "name" : "system agents"
    }, {
      "name" : "system clients"
    }, {
      "name" : "telemetry"
    } ],
    "schemes" : [ "http", "https" ],
    "paths" : {
      "/ping" : {
        "get" : {
          "tags" : [ "ping" ],
          "summary" : "Can be used to determine if the JCP process is currently running.",
          "description" : "",
          "operationId" : "ping",
          "produces" : [ "application/json" ],
          "responses" : {
            "200" : {
              "description" : "Ping successful."
            },
            "500" : {
              "description" : "Internal error occurred."
            }
          }
        }
      },
      "/{client_id}/executions" : {
        "get" : {
          "tags" : [ "execution" ],
          "summary" : "List executions, ordered descending by activation_time and run_id.",
          "description" : "",
          "operationId" : "listExecutions",
          "produces" : [ "application/json" ],
          "parameters" : [ {
            "name" : "max_results",
            "in" : "query",
            "description" : "Maximum number of executions for a page result set. If this parameter is omitted the default value 50 is applied.",
            "required" : false,
            "type" : "integer",
            "minimum" : 1,
            "format" : "int32",
            "x-example" : 50
          }, {
            "name" : "start_at_run_id",
            "in" : "query",
            "description" : "Requested page starts with execution with RunID > this parameter. If this parameter is omitted (no offset) the very first page is returned.",
            "required" : false,
            "type" : "integer",
            "format" : "int32",
            "x-example" : 1000030
          }, {
            "name" : "run_id",
            "in" : "query",
            "description" : "RunID of the execution.",
            "required" : false,
            "type" : "integer",
            "format" : "int32",
            "x-example" : 1000030
          }, {
            "name" : "name",
            "in" : "query",
            "description" : "Object name to query. Supports wildcards (*).",
            "required" : false,
            "type" : "string",
            "x-example" : "SCRI.NEW.1"
          }, {
            "name" : "name_exclude",
            "in" : "query",
            "description" : "Exclude object name.",
            "required" : false,
            "type" : "boolean",
            "x-example" : true
          }, {
            "name" : "alias",
            "in" : "query",
            "description" : "Object alias to query. Supports wildcards (*).",
            "required" : false,
            "type" : "string",
            "x-example" : "SCRI.ALIAS.1"
          }, {
            "name" : "type",
            "in" : "query",
            "description" : "Object types to query. Supports multiple, comma-separated values. If omitted, all executable object types are used as default value.",
            "required" : false,
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "collectionFormat" : "multi",
            "x-example" : "SCRI"
          }, {
            "name" : "status",
            "in" : "query",
            "description" : "Status to query. Supports multiple, comma-separated values.",
            "required" : false,
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "collectionFormat" : "multi",
            "x-example" : "1800"
          }, {
            "name" : "agent",
            "in" : "query",
            "description" : "Agent name to query. Supports wildcards (*).",
            "required" : false,
            "type" : "string",
            "x-example" : "WIN01"
          }, {
            "name" : "agent_exclude",
            "in" : "query",
            "description" : "Exclude agent name.",
            "required" : false,
            "type" : "boolean",
            "x-example" : "false"
          }, {
            "name" : "platform",
            "in" : "query",
            "description" : "Agent types to query. Supports multiple, comma-separated values.",
            "required" : false,
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "collectionFormat" : "multi",
            "x-example" : "WINDOWS"
          }, {
            "name" : "queue",
            "in" : "query",
            "description" : "Queues to query. Supports multiple, comma-separated values.",
            "required" : false,
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "collectionFormat" : "multi",
            "x-example" : "CLIENT_QUEUE"
          }, {
            "name" : "include_deactivated",
            "in" : "query",
            "description" : "Include deactivated executions into query.",
            "required" : false,
            "type" : "boolean",
            "x-example" : "false"
          }, {
            "name" : "time_frame_option",
            "in" : "query",
            "description" : "Timeframe option to be used for the query. If omitted, the default value of 'all' is applied.",
            "required" : false,
            "type" : "string",
            "enum" : [ "activation", "start", "end", "all" ]
          }, {
            "name" : "time_frame_from",
            "in" : "query",
            "description" : "Timeframe lower bound to be used for the query.",
            "required" : false,
            "type" : "string",
            "pattern" : "^\\d{4}\\-(0[1-9]|1[012])\\-(0[1-9]|[12][0-9]|3[01])[T](?:[01]\\d|2[0123]):(?:[012345]\\d):(?:[012345]\\d)[Z]$",
            "x-example" : "2015-04-15T06:37:59Z"
          }, {
            "name" : "time_frame_to",
            "in" : "query",
            "description" : "Timeframe upper bound to be used for the query.",
            "required" : false,
            "type" : "string",
            "pattern" : "^\\d{4}\\-(0[1-9]|1[012])\\-(0[1-9]|[12][0-9]|3[01])[T](?:[01]\\d|2[0123]):(?:[012345]\\d):(?:[012345]\\d)[Z]$",
            "x-example" : "2015-04-15T06:37:59Z"
          }, {
            "name" : "user",
            "in" : "query",
            "description" : "Username to query. Supports wildcards (*).",
            "required" : false,
            "type" : "string",
            "x-example" : "TEST/DEP"
          }, {
            "name" : "user_exclude",
            "in" : "query",
            "description" : "Exclude username.",
            "required" : false,
            "type" : "boolean",
            "x-example" : "false"
          }, {
            "name" : "archive_key1",
            "in" : "query",
            "description" : "Archive key1 to query. Supports wildcards (*).",
            "required" : false,
            "type" : "string",
            "x-example" : "key1"
          }, {
            "name" : "archive_key1_exclude",
            "in" : "query",
            "description" : "Exclude archive key1.",
            "required" : false,
            "type" : "boolean",
            "x-example" : "false"
          }, {
            "name" : "archive_key2",
            "in" : "query",
            "description" : "Archive key2 to query. Supports wildcards (*).",
            "required" : false,
            "type" : "string",
            "x-example" : "key2"
          }, {
            "name" : "archive_key2_exclude",
            "in" : "query",
            "description" : "Exclude archive key2.",
            "required" : false,
            "type" : "boolean",
            "x-example" : "false"
          }, {
            "name" : "commented_only",
            "in" : "query",
            "description" : "Query only commented tasks.",
            "required" : false,
            "type" : "boolean",
            "x-example" : "false"
          }, {
            "name" : "modified_only",
            "in" : "query",
            "description" : "Query only modified workflows.",
            "required" : false,
            "type" : "boolean",
            "x-example" : "false"
          }, {
            "name" : "remote_status_number",
            "in" : "query",
            "description" : "Remote status text to query.",
            "required" : false,
            "type" : "integer",
            "format" : "int32",
            "x-example" : 1200
          }, {
            "name" : "remote_status_text",
            "in" : "query",
            "description" : "Remote status number to query.",
            "required" : false,
            "type" : "string",
            "x-example" : "Executed"
          }, {
            "name" : "reference_run_id",
            "in" : "query",
            "description" : "RunID of the original execution, zero if this was not a restart.",
            "required" : false,
            "type" : "integer",
            "format" : "int32",
            "x-example" : 1000031
          }, {
            "name" : "zdu_version",
            "in" : "query",
            "description" : "Query ZDU Version.",
            "required" : false,
            "type" : "string",
            "pattern" : "([BT])",
            "enum" : [ "B", "T" ]
          }, {
            "name" : "sync_usage",
            "in" : "query",
            "description" : "Sync objects to query. Supports multiple, comma-separated values.",
            "required" : false,
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "collectionFormat" : "multi",
            "x-example" : "SYNC1"
          }, {
            "name" : "fields",
            "in" : "query",
            "description" : "Parameter to include various additional information about an execution.<br><strong>restarts</strong> - Includes the number of restarts<br><strong>predecessors</strong> - Includes a list of the predecessors of a workflow task<strong>recurring</strong> - Includes details of a C_PERIOD task",
            "required" : false,
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "restarts", "predecessors", "recurring" ]
            },
            "collectionFormat" : "multi"
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/OutExecutionList"
              }
            },
            "400" : {
              "description" : "Bad request - request data is invalid"
            },
            "401" : {
              "description" : "Unauthorized access - login data not valid."
            },
            "403" : {
              "description" : "Forbidden - the user is not allowed to access the resource."
            },
            "404" : {
              "description" : "The resource is not available."
            },
            "405" : {
              "description" : "Method not allowed."
            },
            "500" : {
              "description" : "Internal error occurred."
            }
          }
        },
        "post" : {
          "tags" : [ "execution" ],
          "summary" : "Execute an object with or without input parameters (promptsets variables).",
          "description" : "Requests for sample use-cases: <br><ul>\t<li><a href=\"examples/executions/executeobject/example-recurring-calendar-interval.json\">Use Case 1:</a> Execute an object in an periodic interval (every 3 days) only on specific days - using calendar conditions. Prompt variables are also passed.</li>\t<li><a href=\"examples/executions/executeobject/example-recurring-gap.json\">Use Case 2:</a> Execute an object in certain gaps (5 minutes) between executions. End after 5 exeuctions.</li>\t<li><a href=\"examples/executions/executeobject/example-recurring-weekly.json\">Use Case 3:</a> Execute object at a specific time on specific weekdays (monday, wednesday, thursday, sunday).</li>\t<li><a href=\"examples/executions/executeobject/example-once-time.json\">Use Case 4:</a> Execute object once at a specific date and time.</li>\t<li><a href=\"examples/executions/executeobject/example-once-release.json\">Use Case 5:</a> Execute object which must be manual released.</li>\t<li><a href=\"examples/executions/executeobject/example-with-json-input.json\">Use Case 6:</a> Execute object with an input parameter of type json. By using the '|json' filter, one can pass JSON documents without converting them to a string.</li></ul>",
          "operationId" : "executeObject",
          "produces" : [ "application/json" ],
          "parameters" : [ {
            "in" : "body",
            "name" : "body",
            "required" : true,
            "schema" : {
              "$ref" : "#/definitions/InExecutionBody"
            }
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/OutRunId"
              }
            },
            "400" : {
              "description" : "Bad request - request data is invalid<br><br><span><b>45111</b>: Object to be executed has to have the attribute \"generate at runtime\" set</span><br><span><b>45113</b>: Given string is not a valid object name</span><br><span><b>45114</b>: Given string is not a valid execution option</span><br><span><b>45115</b>: Object to be executed is not an executable one</span>",
              "schema" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/definitions/OutValidationError"
                }
              }
            },
            "401" : {
              "description" : "Unauthorized access - login data not valid.",
              "schema" : {
                "$ref" : "#/definitions/OutError"
              }
            },
            "403" : {
              "description" : "Forbidden - the user is not allowed to access the resource."
            },
            "404" : {
              "description" : "The resource is not available."
            },
            "405" : {
              "description" : "Method not allowed."
            },
            "500" : {
              "description" : "Internal error occurred."
            }
          }
        },
        "parameters" : [ {
          "name" : "client_id",
          "in" : "path",
          "description" : "Number/ID of the client.",
          "required" : true,
          "type" : "string"
        } ]
      },
      "/{client_id}/executions/{run_id}" : {
        "get" : {
          "tags" : [ "execution" ],
          "summary" : "Get details of a given execution.",
          "description" : "",
          "operationId" : "getExecution",
          "produces" : [ "application/json" ],
          "parameters" : [ {
            "name" : "fields",
            "in" : "query",
            "description" : "Parameter to include various additional information about an execution.<br><strong>comments</strong> - Includes a list of all comments that have been added to the execution<br><strong>variables</strong> - Includes a list of all object variables defined at the execution's scope<br><strong>reports</strong> - Includes a list of all report types of the execution<br><strong>restarts</strong> - Includes the number of restarts<br><strong>predecessors</strong> - Includes a list of the predecessors of a workflow task<br><strong>recurring</strong> - Includes details of a C_PERIOD task",
            "required" : false,
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "comments", "variables", "reports", "restarts", "predecessors", "recurring" ]
            },
            "collectionFormat" : "multi"
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/OutExecution"
              }
            },
            "400" : {
              "description" : "Bad request - request data is invalid"
            },
            "401" : {
              "description" : "Unauthorized access - login data not valid."
            },
            "403" : {
              "description" : "Forbidden - the user is not allowed to access the resource."
            },
            "404" : {
              "description" : "The resource is not available."
            },
            "405" : {
              "description" : "Method not allowed."
            },
            "500" : {
              "description" : "Internal error occurred."
            }
          }
        },
        "parameters" : [ {
          "name" : "client_id",
          "in" : "path",
          "description" : "Number/ID of the client.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "run_id",
          "in" : "path",
          "description" : "RunID of the execution.",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        } ]
      },
      "/{client_id}/executions/{run_id}/children" : {
        "get" : {
          "tags" : [ "execution" ],
          "summary" : "Gets all immediate execution children, ordered descending by activation_time and run_id.",
          "description" : "",
          "operationId" : "getChildrenOfExecution",
          "produces" : [ "application/json" ],
          "parameters" : [ {
            "name" : "max_results",
            "in" : "query",
            "description" : "Maximum number of executions for a page result set. If this parameter is omitted the default value 50 is applied.",
            "required" : false,
            "type" : "integer",
            "minimum" : 1,
            "format" : "int32",
            "x-example" : 50
          }, {
            "name" : "start_at_run_id",
            "in" : "query",
            "description" : "Requested page starts with execution with RunID > this parameter. If this parameter is omitted (no offset) the very first page is returned.",
            "required" : false,
            "type" : "integer",
            "format" : "int32",
            "x-example" : 1000030
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/OutExecutionList"
              }
            },
            "400" : {
              "description" : "Bad request - request data is invalid"
            },
            "401" : {
              "description" : "Unauthorized access - login data not valid."
            },
            "403" : {
              "description" : "Forbidden - the user is not allowed to access the resource."
            },
            "404" : {
              "description" : "The resource is not available."
            },
            "405" : {
              "description" : "Method not allowed."
            },
            "500" : {
              "description" : "Internal error occurred."
            }
          }
        },
        "parameters" : [ {
          "name" : "client_id",
          "in" : "path",
          "description" : "Number/ID of the client.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "run_id",
          "in" : "path",
          "description" : "RunID of the execution.",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        } ]
      },
      "/{client_id}/executions/{run_id}/comments" : {
        "get" : {
          "tags" : [ "execution comment", "execution" ],
          "summary" : "List all comments for a given execution.",
          "description" : "",
          "operationId" : "list",
          "produces" : [ "application/json" ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/definitions/OutComment"
                }
              }
            },
            "400" : {
              "description" : "Bad request - request data is invalid"
            },
            "401" : {
              "description" : "Unauthorized access - login data not valid."
            },
            "403" : {
              "description" : "Forbidden - the user is not allowed to access the resource."
            },
            "404" : {
              "description" : "The resource is not available."
            },
            "405" : {
              "description" : "Method not allowed."
            },
            "500" : {
              "description" : "Internal error occurred."
            }
          }
        },
        "post" : {
          "tags" : [ "execution comment", "execution" ],
          "summary" : "Appends a comment to a given execution.",
          "description" : "",
          "operationId" : "create",
          "produces" : [ "application/json" ],
          "parameters" : [ {
            "in" : "body",
            "name" : "body",
            "required" : true,
            "schema" : {
              "$ref" : "#/definitions/InAddCommentBody"
            }
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/OutComment"
              }
            },
            "400" : {
              "description" : "Bad request - request data is invalid<br><br><span><b>45149</b>: Client#&01 is not allowed to perform this action.<span><b>45150</b>: Property '&01' may not be null.</span><br><span><b>45151</b>: Property '&01' contains an invalid value. &02.</span><br>"
            },
            "401" : {
              "description" : "Unauthorized access - login data not valid."
            },
            "403" : {
              "description" : "Forbidden - the user is not allowed to access the resource."
            },
            "404" : {
              "description" : "The resource is not available."
            },
            "405" : {
              "description" : "Method not allowed."
            },
            "500" : {
              "description" : "Internal error occurred."
            }
          }
        },
        "parameters" : [ {
          "name" : "client_id",
          "in" : "path",
          "description" : "Number/ID of the client.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "run_id",
          "in" : "path",
          "description" : "RunID of the execution.",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        } ]
      },
      "/{client_id}/executions/{run_id}/ert" : {
        "get" : {
          "tags" : [ "execution" ],
          "summary" : "Get ERT estimations for the given workflow.",
          "description" : "",
          "operationId" : "computeErtEstimations",
          "produces" : [ "application/json" ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/OutErtEstimations"
              }
            },
            "400" : {
              "description" : "Bad request - request data is invalid"
            },
            "401" : {
              "description" : "Unauthorized access - login data not valid."
            },
            "403" : {
              "description" : "Forbidden - the user is not allowed to access the resource."
            },
            "404" : {
              "description" : "The resource is not available."
            },
            "405" : {
              "description" : "Method not allowed."
            },
            "500" : {
              "description" : "Internal error occurred."
            }
          }
        },
        "parameters" : [ {
          "name" : "client_id",
          "in" : "path",
          "description" : "Number/ID of the client.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "run_id",
          "in" : "path",
          "description" : "RunID of the execution.",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        } ]
      },
      "/{client_id}/executions/{run_id}/reports" : {
        "get" : {
          "tags" : [ "execution report", "execution" ],
          "summary" : "Report list for a given execution.",
          "description" : "",
          "operationId" : "listReports",
          "produces" : [ "application/json" ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/definitions/OutReport"
                }
              }
            },
            "400" : {
              "description" : "Bad request - request data is invalid"
            },
            "401" : {
              "description" : "Unauthorized access - login data not valid."
            },
            "403" : {
              "description" : "Forbidden - the user is not allowed to access the resource."
            },
            "404" : {
              "description" : "The resource is not available."
            },
            "405" : {
              "description" : "Method not allowed."
            },
            "500" : {
              "description" : "Internal error occurred."
            }
          }
        },
        "parameters" : [ {
          "name" : "client_id",
          "in" : "path",
          "description" : "Number/ID of the client.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "run_id",
          "in" : "path",
          "description" : "RunID of the execution.",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        } ]
      },
      "/{client_id}/executions/{run_id}/reports/{report_type}" : {
        "get" : {
          "tags" : [ "execution report", "execution" ],
          "summary" : "Report content pages.",
          "description" : "",
          "operationId" : "listReportContent",
          "produces" : [ "application/json" ],
          "parameters" : [ {
            "name" : "report_type",
            "in" : "path",
            "description" : "Type of a execution report",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "max_results",
            "in" : "query",
            "description" : "Maximum number of report pages. If this parameter is omitted the default value 1 is applied.",
            "required" : false,
            "type" : "integer",
            "default" : 1,
            "format" : "int32",
            "x-example" : 5
          }, {
            "name" : "start_at",
            "in" : "query",
            "description" : "Response lists report pages with numbers > this parameter.",
            "required" : false,
            "type" : "integer",
            "default" : 1,
            "format" : "int32",
            "x-example" : 3
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/definitions/OutReportContent"
                }
              }
            },
            "400" : {
              "description" : "Bad request - request data is invalid"
            },
            "401" : {
              "description" : "Unauthorized access - login data not valid."
            },
            "403" : {
              "description" : "Forbidden - the user is not allowed to access the resource."
            },
            "404" : {
              "description" : "The resource is not available."
            },
            "405" : {
              "description" : "Method not allowed."
            },
            "500" : {
              "description" : "Internal error occurred."
            }
          }
        },
        "parameters" : [ {
          "name" : "client_id",
          "in" : "path",
          "description" : "Number/ID of the client.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "run_id",
          "in" : "path",
          "description" : "RunID of the execution.",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        } ]
      },
      "/{client_id}/executions/{run_id}/status" : {
        "post" : {
          "tags" : [ "execution" ],
          "summary" : "Changes the status of an execution.",
          "description" : "Requests for sample use-cases: <br><ul>\t<li><a href=\"examples/executions/status/example-cancel-simple.json\">Use Case 1:</a> Cancel a job including its children</li>\t<li><a href=\"examples/executions/status/example-restart-simple.json\">Use Case 2:</a> Minimal restart</li>\t<li><a href=\"examples/executions/status/example-restart-params.json\">Use Case 3:</a> Restart where parameters are passed</li></ul>",
          "operationId" : "changeExecutionStatus",
          "produces" : [ "application/json" ],
          "parameters" : [ {
            "in" : "body",
            "name" : "body",
            "required" : true,
            "schema" : {
              "$ref" : "#/definitions/InChangeExecutionStatusBody"
            }
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/OutChangeExecutionStatus"
              }
            },
            "400" : {
              "description" : "Bad request - request data is invalid"
            },
            "401" : {
              "description" : "Unauthorized access - login data not valid."
            },
            "403" : {
              "description" : "Forbidden - the user is not allowed to access the resource."
            },
            "404" : {
              "description" : "The resource is not available."
            },
            "405" : {
              "description" : "Method not allowed."
            },
            "500" : {
              "description" : "Internal error occurred."
            }
          }
        },
        "parameters" : [ {
          "name" : "client_id",
          "in" : "path",
          "description" : "Number/ID of the client.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "run_id",
          "in" : "path",
          "description" : "RunID of the execution.",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        } ]
      },
      "/{client_id}/executions/{run_id}/variables" : {
        "get" : {
          "tags" : [ "execution variable", "execution" ],
          "summary" : "List all variables for a given execution.",
          "description" : "",
          "operationId" : "listVariables",
          "produces" : [ "application/json" ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "type" : "object",
                "additionalProperties" : {
                  "type" : "object"
                }
              }
            },
            "400" : {
              "description" : "Bad request - request data is invalid"
            },
            "401" : {
              "description" : "Unauthorized access - login data not valid."
            },
            "403" : {
              "description" : "Forbidden - the user is not allowed to access the resource."
            },
            "404" : {
              "description" : "The resource is not available."
            },
            "405" : {
              "description" : "Method not allowed."
            },
            "500" : {
              "description" : "Internal error occurred."
            }
          }
        },
        "parameters" : [ {
          "name" : "client_id",
          "in" : "path",
          "description" : "Number/ID of the client.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "run_id",
          "in" : "path",
          "description" : "RunID of the execution.",
          "required" : true,
          "type" : "integer",
          "format" : "int32"
        } ]
      },
      "/{client_id}/forecasts" : {
        "get" : {
          "tags" : [ "forecast" ],
          "summary" : "List all forecasts, ordered descending by start_time.",
          "description" : "",
          "operationId" : "listForecasts",
          "produces" : [ "application/json" ],
          "parameters" : [ {
            "name" : "fc_title",
            "in" : "query",
            "description" : "Forecast title to query. Supports wildcards (*).",
            "required" : false,
            "type" : "string",
            "x-example" : "JOBP.NEW.FORECAST"
          }, {
            "name" : "fc_start_time",
            "in" : "query",
            "description" : "Minimum start time to query.",
            "required" : false,
            "type" : "string",
            "x-example" : "2018-02-18T10:00:00Z"
          }, {
            "name" : "fc_end_time",
            "in" : "query",
            "description" : "Maximum end time to query.",
            "required" : false,
            "type" : "string",
            "x-example" : "2018-02-19T10:00:00Z"
          }, {
            "name" : "fc_type",
            "in" : "query",
            "description" : "Forecast type to query. Omit to get all types.",
            "required" : false,
            "type" : "string",
            "x-example" : "FCST",
            "enum" : [ "FCST", "AFCST" ]
          }, {
            "name" : "name",
            "in" : "query",
            "description" : "Object name to query. Supports wildcards (*).",
            "required" : false,
            "type" : "string",
            "x-example" : "SCRI.NEW.1"
          }, {
            "name" : "type",
            "in" : "query",
            "description" : "Object types to query. Supports multiple, comma-separated values. If omitted, all executable object types are used as default value.",
            "required" : false,
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "collectionFormat" : "multi",
            "x-example" : "SCRI"
          }, {
            "name" : "estimated_start_from",
            "in" : "query",
            "description" : "Logical start date lower bound to be used for the query.",
            "required" : false,
            "type" : "string",
            "x-example" : "2018-02-18T10:00:00Z"
          }, {
            "name" : "estimated_start_to",
            "in" : "query",
            "description" : "Logical start date upper bound to be used for the query.",
            "required" : false,
            "type" : "string",
            "x-example" : "2018-02-19T10:00:00Z"
          }, {
            "name" : "agent_destination",
            "in" : "query",
            "description" : "Agent name to query. Supports wildcards (*).",
            "required" : false,
            "type" : "string",
            "x-example" : "WIN01"
          }, {
            "name" : "agent_source",
            "in" : "query",
            "description" : "Source agent name to query. Supports wildcards (*).",
            "required" : false,
            "type" : "string",
            "x-example" : "WIN01"
          }, {
            "name" : "platform_destination",
            "in" : "query",
            "description" : "Agent platform to query. Supports multiple, comma-separated values.",
            "required" : false,
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "collectionFormat" : "multi",
            "x-example" : "WINDOWS"
          }, {
            "name" : "fields",
            "in" : "query",
            "description" : "Parameter to include various additional information about a forecast.<br><strong>entries</strong> - Includes a list of all entries within a forecast",
            "required" : false,
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "entries" ]
            },
            "collectionFormat" : "multi"
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/OutForecastList"
              }
            },
            "400" : {
              "description" : "Bad request - request data is invalid"
            },
            "401" : {
              "description" : "Unauthorized access - login data not valid."
            },
            "403" : {
              "description" : "Forbidden - the user is not allowed to access the resource."
            },
            "404" : {
              "description" : "The resource is not available."
            },
            "405" : {
              "description" : "Method not allowed."
            },
            "500" : {
              "description" : "Internal error occurred."
            }
          }
        },
        "post" : {
          "tags" : [ "forecast" ],
          "summary" : "Create a forecast.",
          "description" : "",
          "operationId" : "createForecast",
          "produces" : [ "application/json" ],
          "parameters" : [ {
            "in" : "body",
            "name" : "body",
            "required" : true,
            "schema" : {
              "$ref" : "#/definitions/InForecastBody"
            }
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/OutForecastId"
              }
            },
            "400" : {
              "description" : "Bad request - request data is invalid"
            },
            "401" : {
              "description" : "Unauthorized access - login data not valid."
            },
            "403" : {
              "description" : "Forbidden - the user is not allowed to access the resource."
            },
            "404" : {
              "description" : "The resource is not available."
            },
            "405" : {
              "description" : "Method not allowed."
            },
            "500" : {
              "description" : "Internal error occurred."
            }
          }
        },
        "delete" : {
          "tags" : [ "forecast" ],
          "summary" : "Delete forecasts using ids.",
          "description" : "",
          "operationId" : "deleteForecast",
          "produces" : [ "application/json" ],
          "parameters" : [ {
            "in" : "body",
            "name" : "body",
            "required" : false,
            "schema" : {
              "$ref" : "#/definitions/InForecastDeleteBody"
            }
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/OutIdList"
              }
            },
            "400" : {
              "description" : "Bad request - request data is invalid"
            },
            "401" : {
              "description" : "Unauthorized access - login data not valid."
            },
            "403" : {
              "description" : "Forbidden - the user is not allowed to access the resource."
            },
            "404" : {
              "description" : "The resource is not available."
            },
            "405" : {
              "description" : "Method not allowed."
            },
            "500" : {
              "description" : "Internal error occurred."
            }
          }
        },
        "parameters" : [ {
          "name" : "client_id",
          "in" : "path",
          "description" : "Number/ID of the client.",
          "required" : true,
          "type" : "string"
        } ]
      },
      "/{client_id}/forecasts/agents" : {
        "get" : {
          "tags" : [ "forecast" ],
          "summary" : "List forecast agents and gaps.",
          "description" : "",
          "operationId" : "listForecastAgents",
          "produces" : [ "application/json" ],
          "parameters" : [ {
            "name" : "name",
            "in" : "query",
            "description" : "Agent name to query. Supports wildcards (*).",
            "required" : false,
            "type" : "string",
            "x-example" : "WIN01"
          }, {
            "name" : "type",
            "in" : "query",
            "description" : "Agent types to query. Supports multiple, comma-separated values.",
            "required" : false,
            "type" : "string",
            "x-example" : "WINDOWS"
          }, {
            "name" : "version",
            "in" : "query",
            "description" : "Agent version to query. Supports wildcards (*).",
            "required" : false,
            "type" : "string",
            "x-example" : "12.3.0+low.build.1100"
          }, {
            "name" : "from",
            "in" : "query",
            "description" : "Timeframe lower bound to be used for the query.",
            "required" : true,
            "type" : "string",
            "x-example" : "2015-04-15T06:37:59Z"
          }, {
            "name" : "to",
            "in" : "query",
            "description" : "Timeframe upper bound to be used for the query.",
            "required" : true,
            "type" : "string",
            "x-example" : "2015-04-15T06:37:59Z"
          }, {
            "name" : "execution_name",
            "in" : "query",
            "description" : "Timeframe upper bound to be used for the query.",
            "required" : false,
            "type" : "string",
            "x-example" : "2015-04-15T06:37:59Z"
          }, {
            "name" : "min_duration",
            "in" : "query",
            "description" : "Minimal duration of the gap.",
            "required" : false,
            "type" : "string",
            "pattern" : "([-+]?)P(?:([-+]?[0-9]+)D)?(T(?:([-+]?[0-9]+)H)?(?:([-+]?[0-9]+)M)?(?:([-+]?[0-9]+)(?:[.,]([0-9]{0,9}))?S)?)?",
            "x-example" : "PT9H11M34S"
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/OutForecastAgentList"
              }
            },
            "400" : {
              "description" : "Bad request - request data is invalid"
            },
            "401" : {
              "description" : "Unauthorized access - login data not valid."
            },
            "403" : {
              "description" : "Forbidden - the user is not allowed to access the resource."
            },
            "404" : {
              "description" : "The resource is not available."
            },
            "405" : {
              "description" : "Method not allowed."
            },
            "500" : {
              "description" : "Internal error occurred."
            }
          }
        },
        "parameters" : [ {
          "name" : "client_id",
          "in" : "path",
          "description" : "Number/ID of the client.",
          "required" : true,
          "type" : "string"
        } ]
      },
      "/{client_id}/forecasts/{forecast_id}" : {
        "get" : {
          "tags" : [ "forecast" ],
          "summary" : "Get details of a given forecast.",
          "description" : "",
          "operationId" : "getForecast",
          "produces" : [ "application/json" ],
          "parameters" : [ {
            "name" : "forecast_id",
            "in" : "path",
            "description" : "ID of the forecast.",
            "required" : true,
            "type" : "integer",
            "pattern" : "\\d+",
            "format" : "int32"
          }, {
            "name" : "name",
            "in" : "query",
            "description" : "Object name to query. Supports wildcards (*).",
            "required" : false,
            "type" : "string",
            "x-example" : "SCRI.NEW.1"
          }, {
            "name" : "type",
            "in" : "query",
            "description" : "Object types to query. Supports multiple, comma-separated values. If omitted, all executable object types are used as default value.",
            "required" : false,
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "collectionFormat" : "multi",
            "x-example" : "SCRI"
          }, {
            "name" : "estimated_start_from",
            "in" : "query",
            "description" : "Logical start date lower bound to be used for the query.",
            "required" : false,
            "type" : "string",
            "x-example" : "2018-02-18T10:00:00Z"
          }, {
            "name" : "estimated_start_to",
            "in" : "query",
            "description" : "Logical start date upper bound to be used for the query.",
            "required" : false,
            "type" : "string",
            "x-example" : "2018-02-19T10:00:00Z"
          }, {
            "name" : "agent_destination",
            "in" : "query",
            "description" : "Agent name to query. Supports wildcards (*).",
            "required" : false,
            "type" : "string",
            "x-example" : "WIN01"
          }, {
            "name" : "agent_source",
            "in" : "query",
            "description" : "Source agent name to query. Supports wildcards (*).",
            "required" : false,
            "type" : "string",
            "x-example" : "WIN01"
          }, {
            "name" : "platform_destination",
            "in" : "query",
            "description" : "Agent platform to query. Supports multiple, comma-separated values.",
            "required" : false,
            "type" : "array",
            "items" : {
              "type" : "string"
            },
            "collectionFormat" : "multi",
            "x-example" : "WINDOWS"
          }, {
            "name" : "fields",
            "in" : "query",
            "description" : "Parameter to include various additional information about a forecast.<br><strong>entries</strong> - Includes a list of all entries within a forecast",
            "required" : false,
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "entries" ]
            },
            "collectionFormat" : "multi"
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/OutForecast"
              }
            },
            "400" : {
              "description" : "Bad request - request data is invalid"
            },
            "401" : {
              "description" : "Unauthorized access - login data not valid."
            },
            "403" : {
              "description" : "Forbidden - the user is not allowed to access the resource."
            },
            "404" : {
              "description" : "The resource is not available."
            },
            "405" : {
              "description" : "Method not allowed."
            },
            "500" : {
              "description" : "Internal error occurred."
            }
          }
        },
        "post" : {
          "tags" : [ "forecast" ],
          "summary" : "Changes the title of a forecast item.",
          "description" : "",
          "operationId" : "modifyForecast",
          "produces" : [ "application/json" ],
          "parameters" : [ {
            "name" : "forecast_id",
            "in" : "path",
            "description" : "ID of the forecast.",
            "required" : true,
            "type" : "integer",
            "format" : "int32"
          }, {
            "in" : "body",
            "name" : "body",
            "required" : true,
            "schema" : {
              "$ref" : "#/definitions/InModifyForecastBody"
            }
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/OutForecast"
              }
            },
            "400" : {
              "description" : "Bad request - request data is invalid"
            },
            "401" : {
              "description" : "Unauthorized access - login data not valid."
            },
            "403" : {
              "description" : "Forbidden - the user is not allowed to access the resource."
            },
            "404" : {
              "description" : "The resource is not available."
            },
            "405" : {
              "description" : "Method not allowed."
            },
            "500" : {
              "description" : "Internal error occurred."
            }
          }
        },
        "parameters" : [ {
          "name" : "client_id",
          "in" : "path",
          "description" : "Number/ID of the client.",
          "required" : true,
          "type" : "string"
        } ]
      },
      "/{client_id}/objects" : {
        "post" : {
          "tags" : [ "object" ],
          "summary" : "Can be used to import single objects",
          "description" : "",
          "operationId" : "post",
          "produces" : [ "application/json" ],
          "parameters" : [ {
            "in" : "body",
            "name" : "body",
            "required" : false,
            "schema" : {
              "$ref" : "#/definitions/InImportObjectBody"
            }
          }, {
            "name" : "overwrite_existing_objects",
            "in" : "query",
            "description" : "Determines whether existing objects should get overwritten by the import",
            "required" : false,
            "type" : "boolean",
            "default" : false,
            "x-example" : true
          } ],
          "responses" : {
            "401" : {
              "description" : "Unauthorized access - login data not valid."
            },
            "403" : {
              "description" : "Forbidden - the user is not allowed to access the resource."
            },
            "404" : {
              "description" : "The resource is not available."
            },
            "405" : {
              "description" : "Method not allowed."
            },
            "500" : {
              "description" : "Internal error occurred."
            },
            "default" : {
              "description" : "successful operation"
            }
          }
        },
        "parameters" : [ {
          "name" : "client_id",
          "in" : "path",
          "description" : "Number/ID of the client.",
          "required" : true,
          "type" : "string"
        } ]
      },
      "/{client_id}/objects/{object_name}" : {
        "get" : {
          "tags" : [ "object" ],
          "summary" : "Can be used to export single objects by name",
          "description" : "",
          "operationId" : "get",
          "produces" : [ "application/json" ],
          "parameters" : [ {
            "name" : "fields",
            "in" : "query",
            "description" : "Optional list of additional fields.<br><strong>modification_details</strong> - Includes modification/creation date and user name.<br>",
            "required" : false,
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "modification_details" ]
            },
            "collectionFormat" : "multi"
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/OutObject"
              }
            },
            "401" : {
              "description" : "Unauthorized access - login data not valid."
            },
            "403" : {
              "description" : "Forbidden - the user is not allowed to access the resource."
            },
            "404" : {
              "description" : "The resource is not available."
            },
            "405" : {
              "description" : "Method not allowed."
            },
            "500" : {
              "description" : "Internal error occurred."
            }
          }
        },
        "parameters" : [ {
          "name" : "client_id",
          "in" : "path",
          "description" : "Number/ID of the client.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "object_name",
          "in" : "path",
          "description" : "Name of the object.",
          "required" : true,
          "type" : "string"
        } ]
      },
      "/{client_id}/objects/{object_name}/inputs" : {
        "get" : {
          "tags" : [ "object" ],
          "summary" : "List all inputs for a given object.",
          "description" : "",
          "operationId" : "listObjectInputs",
          "produces" : [ "application/json" ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "type" : "object",
                "additionalProperties" : {
                  "type" : "object"
                }
              }
            },
            "400" : {
              "description" : "Bad request - request data is invalid"
            },
            "401" : {
              "description" : "Unauthorized access - login data not valid."
            },
            "403" : {
              "description" : "Forbidden - the user is not allowed to access the resource."
            },
            "404" : {
              "description" : "The resource is not available."
            },
            "405" : {
              "description" : "Method not allowed."
            },
            "500" : {
              "description" : "Internal error occurred."
            }
          }
        },
        "parameters" : [ {
          "name" : "client_id",
          "in" : "path",
          "description" : "Number/ID of the client.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "object_name",
          "in" : "path",
          "description" : "Name of the object.",
          "required" : true,
          "type" : "string"
        } ]
      },
      "/{client_id}/objects/{object_name}/timezone" : {
        "get" : {
          "tags" : [ "object" ],
          "summary" : "Returns the time zone used by an object definition or defaults if the object or time zone does not exist.",
          "description" : "",
          "operationId" : "getTimezoneInfo",
          "produces" : [ "application/json" ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/OutTimeZoneInfo"
              }
            },
            "400" : {
              "description" : "Bad request - request data is invalid"
            },
            "401" : {
              "description" : "Unauthorized access - login data not valid."
            },
            "403" : {
              "description" : "Forbidden - the user is not allowed to access the resource."
            },
            "404" : {
              "description" : "The resource is not available."
            },
            "405" : {
              "description" : "Method not allowed."
            },
            "500" : {
              "description" : "Internal error occurred."
            }
          }
        },
        "parameters" : [ {
          "name" : "client_id",
          "in" : "path",
          "description" : "Number/ID of the client.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "object_name",
          "in" : "path",
          "description" : "Name of the object.",
          "required" : true,
          "type" : "string"
        } ]
      },
      "/{client_id}/objects/{object_name}/usage" : {
        "get" : {
          "tags" : [ "object" ],
          "summary" : "Returns a list of objects with a reference name, a boolean to show if the actual result has hidden objects due to acl conflicts, for the given objectname",
          "description" : "",
          "operationId" : "usage",
          "produces" : [ "application/json" ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/OutObjectUsage"
              }
            },
            "400" : {
              "description" : "Bad request - request data is invalid"
            },
            "401" : {
              "description" : "Unauthorized access - login data not valid."
            },
            "403" : {
              "description" : "Forbidden - the user is not allowed to access the resource."
            },
            "404" : {
              "description" : "The resource is not available."
            },
            "405" : {
              "description" : "Method not allowed."
            },
            "500" : {
              "description" : "Internal error occurred."
            }
          }
        },
        "parameters" : [ {
          "name" : "client_id",
          "in" : "path",
          "description" : "Number/ID of the client.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "object_name",
          "in" : "path",
          "description" : "Name of the object.",
          "required" : true,
          "type" : "string"
        } ]
      },
      "/{client_id}/objects/{object_name}/usage/calendarevent/{event_name}" : {
        "get" : {
          "tags" : [ "object" ],
          "summary" : "Returns a list of objects with a reference name, a boolean to show if the actual result has hidden objects due to acl conflicts, for the given objectname",
          "description" : "",
          "operationId" : "usageForCalendarEvents",
          "produces" : [ "application/json" ],
          "parameters" : [ {
            "name" : "event_name",
            "in" : "path",
            "description" : "Name of the Calendar Event.",
            "required" : true,
            "type" : "string"
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/OutObjectUsage"
              }
            },
            "400" : {
              "description" : "Bad request - request data is invalid"
            },
            "401" : {
              "description" : "Unauthorized access - login data not valid."
            },
            "403" : {
              "description" : "Forbidden - the user is not allowed to access the resource."
            },
            "404" : {
              "description" : "The resource is not available."
            },
            "405" : {
              "description" : "Method not allowed."
            },
            "500" : {
              "description" : "Internal error occurred."
            }
          }
        },
        "parameters" : [ {
          "name" : "client_id",
          "in" : "path",
          "description" : "Number/ID of the client.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "object_name",
          "in" : "path",
          "description" : "Name of the object.",
          "required" : true,
          "type" : "string"
        } ]
      },
      "/{client_id}/repositories" : {
        "get" : {
          "tags" : [ "repositories" ],
          "summary" : "Retrieves repository information for the given client.",
          "description" : "",
          "operationId" : "getRepository",
          "produces" : [ "application/json" ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/OutRepo"
              }
            },
            "401" : {
              "description" : "Unauthorized access - login data not valid."
            },
            "403" : {
              "description" : "Forbidden - the user is not allowed to access the resource."
            },
            "404" : {
              "description" : "The resource is not available."
            },
            "405" : {
              "description" : "Method not allowed."
            },
            "500" : {
              "description" : "Internal error occurred."
            }
          }
        },
        "post" : {
          "tags" : [ "repositories" ],
          "summary" : "Initializes the repository for the specified client.",
          "description" : "",
          "operationId" : "createRepository",
          "produces" : [ "application/json" ],
          "parameters" : [ {
            "in" : "body",
            "name" : "body",
            "required" : false,
            "schema" : {
              "$ref" : "#/definitions/InRepositoryInit"
            }
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/OutRepositoryInit"
              }
            },
            "401" : {
              "description" : "Unauthorized access - login data not valid."
            },
            "403" : {
              "description" : "Forbidden - the user is not allowed to access the resource."
            },
            "404" : {
              "description" : "The resource is not available."
            },
            "405" : {
              "description" : "Method not allowed."
            },
            "500" : {
              "description" : "Internal error occurred."
            }
          }
        },
        "parameters" : [ {
          "name" : "client_id",
          "in" : "path",
          "description" : "Number/ID of the client.",
          "required" : true,
          "type" : "string"
        } ]
      },
      "/{client_id}/repositories/branches" : {
        "get" : {
          "tags" : [ "repositories branches", "repositories" ],
          "summary" : "Retrieves a list of branches.",
          "description" : "",
          "operationId" : "listBranches",
          "produces" : [ "application/json" ],
          "parameters" : [ {
            "name" : "max_results",
            "in" : "query",
            "description" : "Maximum number of executions for a page result set. If this parameter is omitted the default value 50 is applied.",
            "required" : false,
            "type" : "integer",
            "minimum" : 1,
            "format" : "int32",
            "x-example" : 50
          }, {
            "name" : "start_at",
            "in" : "query",
            "description" : "From which branch list entry paging should start.",
            "required" : false,
            "type" : "integer",
            "minimum" : 0,
            "format" : "int32"
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/OutRepositoryHistory"
              }
            },
            "401" : {
              "description" : "Unauthorized access - login data not valid."
            },
            "403" : {
              "description" : "Forbidden - the user is not allowed to access the resource."
            },
            "404" : {
              "description" : "The resource is not available."
            },
            "405" : {
              "description" : "Method not allowed."
            },
            "500" : {
              "description" : "Internal error occurred."
            }
          }
        },
        "post" : {
          "tags" : [ "repositories branches", "repositories" ],
          "summary" : "Create a new branch.",
          "description" : "",
          "operationId" : "createBranch",
          "produces" : [ "application/json" ],
          "parameters" : [ {
            "in" : "body",
            "name" : "body",
            "required" : false,
            "schema" : {
              "$ref" : "#/definitions/InCreateBranchParameters"
            }
          } ],
          "responses" : {
            "401" : {
              "description" : "Unauthorized access - login data not valid."
            },
            "403" : {
              "description" : "Forbidden - the user is not allowed to access the resource."
            },
            "404" : {
              "description" : "The resource is not available."
            },
            "405" : {
              "description" : "Method not allowed."
            },
            "500" : {
              "description" : "Internal error occurred."
            },
            "default" : {
              "description" : "successful operation"
            }
          }
        },
        "parameters" : [ {
          "name" : "client_id",
          "in" : "path",
          "description" : "Number/ID of the client.",
          "required" : true,
          "type" : "string"
        } ]
      },
      "/{client_id}/repositories/branches/{branch_name}/diff" : {
        "get" : {
          "tags" : [ "repositories branches", "repositories" ],
          "summary" : "Get content of two files to see their differences.",
          "description" : "",
          "operationId" : "branchDiff",
          "produces" : [ "application/json" ],
          "parameters" : [ {
            "name" : "branch_name",
            "in" : "path",
            "description" : "Branch name where our file is located.",
            "required" : true,
            "type" : "string",
            "x-example" : "master"
          }, {
            "name" : "branch_name_theirs",
            "in" : "query",
            "description" : "Branch name where their file is located.",
            "required" : true,
            "type" : "string",
            "x-example" : "dev"
          }, {
            "name" : "object_path_ours",
            "in" : "query",
            "description" : "Path of the object on our branch which should be compared.",
            "required" : true,
            "type" : "string",
            "x-example" : "I.AM.CONFLICTING.SCRI"
          }, {
            "name" : "object_path_theirs",
            "in" : "query",
            "description" : "Path of the object on their branch which should be compared.",
            "required" : true,
            "type" : "string",
            "x-example" : "I.AM.CONFLICTING.SCRI"
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/OutRepositoryDiff"
              }
            },
            "401" : {
              "description" : "Unauthorized access - login data not valid."
            },
            "403" : {
              "description" : "Forbidden - the user is not allowed to access the resource."
            },
            "404" : {
              "description" : "The resource is not available."
            },
            "405" : {
              "description" : "Method not allowed."
            },
            "500" : {
              "description" : "Internal error occurred."
            }
          }
        },
        "parameters" : [ {
          "name" : "client_id",
          "in" : "path",
          "description" : "Number/ID of the client.",
          "required" : true,
          "type" : "string"
        } ]
      },
      "/{client_id}/repositories/branches/{branch_name}/log" : {
        "get" : {
          "tags" : [ "repositories branches", "repositories" ],
          "summary" : "Retrieves the history of the repository for max_results entries.",
          "description" : "",
          "operationId" : "branchLog",
          "produces" : [ "application/json" ],
          "parameters" : [ {
            "name" : "branch_name",
            "in" : "path",
            "description" : "Name of the branch.",
            "required" : true,
            "type" : "string"
          }, {
            "name" : "max_results",
            "in" : "query",
            "description" : "Maximum number of executions for a page result set. If this parameter is omitted the default value 50 is applied.",
            "required" : false,
            "type" : "integer",
            "minimum" : 1,
            "format" : "int32",
            "x-example" : 50
          }, {
            "name" : "start_at",
            "in" : "query",
            "description" : "From which history entry paging should be started.",
            "required" : false,
            "type" : "integer",
            "minimum" : 0,
            "format" : "int32"
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/OutRepositoryHistory"
              }
            },
            "401" : {
              "description" : "Unauthorized access - login data not valid."
            },
            "403" : {
              "description" : "Forbidden - the user is not allowed to access the resource."
            },
            "404" : {
              "description" : "The resource is not available."
            },
            "405" : {
              "description" : "Method not allowed."
            },
            "500" : {
              "description" : "Internal error occurred."
            }
          }
        },
        "parameters" : [ {
          "name" : "client_id",
          "in" : "path",
          "description" : "Number/ID of the client.",
          "required" : true,
          "type" : "string"
        } ]
      },
      "/{client_id}/repositories/changes" : {
        "get" : {
          "tags" : [ "repositories" ],
          "summary" : "Returns a list of objects that have uncommitted changes.",
          "description" : "",
          "operationId" : "getChanges",
          "produces" : [ "application/json" ],
          "parameters" : [ {
            "name" : "fields",
            "in" : "query",
            "description" : "Parameter to include various additional information about changes.<br><strong>total</strong> - the total number of uncommitted files.<br>",
            "required" : false,
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "total" ]
            },
            "collectionFormat" : "multi"
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/OutRepositoryUncommittedChanges"
              }
            },
            "401" : {
              "description" : "Unauthorized access - login data not valid."
            },
            "403" : {
              "description" : "Forbidden - the user is not allowed to access the resource."
            },
            "404" : {
              "description" : "The resource is not available."
            },
            "405" : {
              "description" : "Method not allowed."
            },
            "500" : {
              "description" : "Internal error occurred."
            }
          }
        },
        "parameters" : [ {
          "name" : "client_id",
          "in" : "path",
          "description" : "Number/ID of the client.",
          "required" : true,
          "type" : "string"
        } ]
      },
      "/{client_id}/repositories/commits" : {
        "post" : {
          "tags" : [ "repositories commits", "repositories" ],
          "summary" : "Commits only changed objects for client to repository.",
          "description" : "",
          "operationId" : "commitChanges",
          "produces" : [ "application/json" ],
          "parameters" : [ {
            "in" : "body",
            "name" : "body",
            "required" : false,
            "schema" : {
              "$ref" : "#/definitions/InCommitParameters"
            }
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/OutRepositoryCommit"
              }
            },
            "401" : {
              "description" : "Unauthorized access - login data not valid."
            },
            "403" : {
              "description" : "Forbidden - the user is not allowed to access the resource."
            },
            "404" : {
              "description" : "The resource is not available."
            },
            "405" : {
              "description" : "Method not allowed."
            },
            "500" : {
              "description" : "Internal error occurred."
            }
          }
        },
        "parameters" : [ {
          "name" : "client_id",
          "in" : "path",
          "description" : "Number/ID of the client.",
          "required" : true,
          "type" : "string"
        } ]
      },
      "/{client_id}/repositories/commits/{commit_id}" : {
        "post" : {
          "tags" : [ "repositories commits", "repositories" ],
          "summary" : "Imports version of provided GIT Hash to automation engine.",
          "description" : "",
          "operationId" : "moveHead",
          "produces" : [ "application/json" ],
          "parameters" : [ {
            "name" : "commit_id",
            "in" : "path",
            "description" : "GIT Hash of the target commit.",
            "required" : true,
            "type" : "string",
            "x-example" : "1"
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/OutRepositoryRollback"
              }
            },
            "401" : {
              "description" : "Unauthorized access - login data not valid."
            },
            "403" : {
              "description" : "Forbidden - the user is not allowed to access the resource."
            },
            "404" : {
              "description" : "The resource is not available."
            },
            "405" : {
              "description" : "Method not allowed."
            },
            "500" : {
              "description" : "Internal error occurred."
            }
          }
        },
        "parameters" : [ {
          "name" : "client_id",
          "in" : "path",
          "description" : "Number/ID of the client.",
          "required" : true,
          "type" : "string"
        } ]
      },
      "/{client_id}/repositories/merge" : {
        "post" : {
          "tags" : [ "repositories merge", "repositories" ],
          "summary" : "Merge another branch in active branch.",
          "description" : "",
          "operationId" : "mergeBranchIntoActive",
          "produces" : [ "application/json" ],
          "parameters" : [ {
            "in" : "body",
            "name" : "body",
            "required" : false,
            "schema" : {
              "$ref" : "#/definitions/InMergeParameters"
            }
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/OutRepositoryMerge"
              }
            },
            "401" : {
              "description" : "Unauthorized access - login data not valid."
            },
            "403" : {
              "description" : "Forbidden - the user is not allowed to access the resource."
            },
            "404" : {
              "description" : "The resource is not available."
            },
            "405" : {
              "description" : "Method not allowed."
            },
            "500" : {
              "description" : "Internal error occurred."
            }
          }
        },
        "delete" : {
          "tags" : [ "repositories merge", "repositories" ],
          "summary" : "Abort merging so we get out of merging state.",
          "description" : "",
          "operationId" : "delete",
          "produces" : [ "application/json" ],
          "responses" : {
            "401" : {
              "description" : "Unauthorized access - login data not valid."
            },
            "403" : {
              "description" : "Forbidden - the user is not allowed to access the resource."
            },
            "404" : {
              "description" : "The resource is not available."
            },
            "405" : {
              "description" : "Method not allowed."
            },
            "500" : {
              "description" : "Internal error occurred."
            },
            "default" : {
              "description" : "successful operation"
            }
          }
        },
        "parameters" : [ {
          "name" : "client_id",
          "in" : "path",
          "description" : "Number/ID of the client.",
          "required" : true,
          "type" : "string"
        } ]
      },
      "/{client_id}/repositories/pull" : {
        "post" : {
          "tags" : [ "repositories" ],
          "summary" : "Pull changes from repository for active branch.",
          "description" : "",
          "operationId" : "pull",
          "produces" : [ "application/json" ],
          "parameters" : [ {
            "in" : "body",
            "name" : "body",
            "description" : "Parameters for importing after a pull. The pull will abort if there are conflicts and overwriting is not enabled.",
            "required" : true,
            "schema" : {
              "$ref" : "#/definitions/InRepositoryPull"
            }
          } ],
          "responses" : {
            "401" : {
              "description" : "Unauthorized access - login data not valid."
            },
            "403" : {
              "description" : "Forbidden - the user is not allowed to access the resource."
            },
            "404" : {
              "description" : "The resource is not available."
            },
            "405" : {
              "description" : "Method not allowed."
            },
            "500" : {
              "description" : "Internal error occurred."
            },
            "default" : {
              "description" : "successful operation"
            }
          }
        },
        "parameters" : [ {
          "name" : "client_id",
          "in" : "path",
          "description" : "Number/ID of the client.",
          "required" : true,
          "type" : "string"
        } ]
      },
      "/{client_id}/scripts" : {
        "post" : {
          "tags" : [ "scripts" ],
          "summary" : "Runs scripts written in the Automation Engine scripting language.",
          "description" : "",
          "operationId" : "activateScript",
          "produces" : [ "application/json" ],
          "parameters" : [ {
            "in" : "body",
            "name" : "body",
            "required" : true,
            "schema" : {
              "$ref" : "#/definitions/InScriptsBody"
            }
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/OutRunId"
              }
            },
            "400" : {
              "description" : "Bad request - request data is invalid"
            },
            "401" : {
              "description" : "Unauthorized access - login data not valid."
            },
            "403" : {
              "description" : "Forbidden - the user is not allowed to access the resource."
            },
            "404" : {
              "description" : "The resource is not available."
            },
            "405" : {
              "description" : "Method not allowed."
            },
            "500" : {
              "description" : "Internal error occurred."
            }
          }
        },
        "parameters" : [ {
          "name" : "client_id",
          "in" : "path",
          "description" : "Number/ID of the client.",
          "required" : true,
          "type" : "string"
        } ]
      },
      "/{client_id}/search" : {
        "post" : {
          "tags" : [ "search" ],
          "summary" : "Search the process assembly for objects using different filter criteria.",
          "description" : "<b>Note:</b> In order to search for objects, you need to define at least one filter object (see below) and append it to the filter array of the JSON payload. An object has to match every filter of your search to be included in the result set.<br><br><b>Note:</b> The search will consider the folder permissions of the AWI user who executed the API request - it will not find objects that are inaccessible for this user. However, it does not consider permissions directly configured in an object. Therefore you should use defensive programming when processing the search results - i.e. your code must be able to handle access violation errors.<br><br><b>Note:</b> To sort the result set you can populate property <i>sort_columns</i>. This <a href=\"examples/search/sort/example-name-title-sort.json\">example</a> shows how to sort the result set after <i>name</i> ascending and <i>title</i> descending. Following properties are supported: <i>name, type, sub_type, platform, title, archive_key1, archive_key2, folder_path, modified_date, last_used_date, creation_date, calendar_event_name, calendar_event_ctype, calendar_event_valid_from, calendar_event_valid_to</i>.<br><br><table>\t<thead>\t\t<tr>\t\t\t<th>filter identifier</th>\t\t\t<th>filter model</th>\t\t\t<th>description</th>\t\t\t<th>example</th>\t\t</tr>\t</thead>\t<tbody>\t\t<tr>\t\t\t<td><i>object_name</i></td>\t\t\t<td><a href='#model-ObjectNameFilter'>ObjectNameFilter</a></td>\t\t\t<td>Searches for object names, also supports placeholder signs.</td>\t\t\t<td><a href=\"examples/search/filters/example-object-name-filter.json\">Example</a></td>\t\t</tr>\t\t<tr>\t\t\t<td><i>calendar_event</i></td>\t\t\t<td><a href='#model-CalendarEventFilter'>CalendarEventFilter</a></td>\t\t\t<td>Searches for calendar events with the given event name that are valid on the given time frame.</td>\t\t\t<td><a href=\"examples/search/filters/example-calendar-event-filter.json\">Example</a></td>\t\t</tr>\t\t<tr>\t\t\t<td><i>granularity</i></td>\t\t\t<td><a href='#model-GranularityFilter'>GranularityFilter</a></td>\t\t\t<td>By default, a search query returns UC4 objects. To return calendar-events, use this \t\t\tfilter with the value <i>CALENDAR_EVENT</i> in field <i>granularity</i>.</td>\t\t\t<td><a href=\"examples/search/filters/example-granularity-filter.json\">Example</a></td>\t\t</tr>\t\t<tr>\t\t\t<td><i>location</i></td>\t\t\t<td><a href='#model-LocationFilter'>LocationFilter</a></td>\t\t\t<td>Finds objects by their folder location.</td>\t\t\t<td><a href=\"examples/search/filters/example-location-filter.json\">Example</a></td>\t\t</tr>\t\t<tr>\t\t\t<td><i>time_frame</i></td>\t\t\t<td><a href='#model-TimeFrameFilter'>TimeFrameFilter</a></td>\t\t\t<td>Searches for objects that were created create/modified/used within the given \t\t\ttimeframe (unix epoch dates). Note: queries for object usage only return results if the <i>LAST_USE</i> property \t\t\thas been enabled in <i>UC_SYSTEM_SETTINGS</i>.</td>\t\t\t<td><a href=\"examples/search/filters/example-time-frame-filter.json\">Example</a></td>\t\t</tr>\t\t<tr>\t\t\t<td><i>client</i></td>\t\t\t<td><a href='#model-ClientFilter'>ClientFilter</a></td>\t\t\t<td>Extend the search to objects on client 0.</td>\t\t\t<td><a href=\"examples/search/filters/example-client-filter.json\">Example</a></td>\t\t</tr>\t\t<tr>\t\t\t<td><i>object_id</i></td>\t\t\t<td><a href='#model-ObjectIdFilter'>ObjectIdFilter</a></td>\t\t\t<td>Searches for an object with the given id.</td>\t\t\t<td><a href=\"examples/search/filters/example-object-id-filter.json\">Example</a></td>\t\t</tr>\t\t<tr>\t\t\t<td><i>variable_key</i></td>\t\t\t<td><a href='#model-VaraKeyFilter'>VaraKeyFilter</a></td>\t\t\t<td>Searches for variable keys inside of <i>STATIC VARA</i> objects.</td>\t\t\t<td><a href=\"examples/search/filters/example-variable-key-filter.json\">Example</a></td>\t\t</tr>\t\t<tr>\t\t\t<td><i>agent</i></td>\t\t\t<td><a href='#model-AgentFilter'>AgentFilter</a></td>\t\t\t<td>Searches content of the agent field in <i>JOBS</i> objects.</td>\t\t\t<td><a href=\"examples/search/filters/example-agent-filter.json\">Example</a></td>\t\t</tr>\t\t<tr>\t\t\t<td><i>login</i></td>\t\t\t<td><a href='#model-LoginFilter'>LoginFilter</a></td>\t\t\t<td>Searches content of the login field in <i>JOBS</i> objects.</td>\t\t\t<td><a href=\"examples/search/filters/example-login-filter.json\">Example</a></td>\t\t</tr>\t\t<tr>\t\t\t<td><i>archive_key</i></td>\t\t\t<td><a href='#model-ArchiveKeysFilter'>ArchiveKeysFilter</a></td>\t\t\t<td>Search within the archive keys of an object. Please note that an archive key can \t\t\tonly have 32 characters, searching for longer keys will yield empty results.</td>\t\t\t<td><a href=\"examples/search/filters/example-archive-key-filter.json\">Example</a></td>\t\t</tr>\t\t<tr>\t\t\t<td><i>variable_value</i></td>\t\t\t<td><a href='#model-VaraValueFilter'>VaraValueFilter</a></td>\t\t\t<td>Searches for variable keys inside of <i>STATIC VARA</i> objects.</td>\t\t\t<td><a href=\"examples/search/filters/example-variable-value-filter.json\">Example</a></td>\t\t</tr>\t\t<tr>\t\t\t<td><i>title</i></td>\t\t\t<td><a href='#model-ObjectTitleFilter'>ObjectTitleFilter</a></td>\t\t\t<td>Search in object titles.</td>\t\t\t<td><a href=\"examples/search/filters/example-title-filter.json\">Example</a></td>\t\t</tr>\t\t<tr>\t\t\t<td><i>process</i></td>\t\t\t<td><a href='#model-ProcessSheetFilter'>ProcessSheetFilter</a></td>\t\t\t<td>Search in scripts of the process sheet (full-text).</td>\t\t\t<td><a href=\"examples/search/filters/example-process-filter.json\">Example</a></td>\t\t</tr>\t\t<tr>\t\t\t<td><i>documentation</i></td>\t\t\t<td><a href='#model-DocumentationFilter'>DocumentationFilter</a></td>\t\t\t<td>Search in object's documentation (full-text). Performs a full-text search in the \t\t\tdocumentation of an object (structured and unstructured). For structured documentation, \t\t\tthe search term will be matched against keys and values of the documentation.</td>\t\t\t<td><a href=\"examples/search/filters/example-documentation-filter.json\">Example</a></td>\t\t</tr>\t\t<tr>\t\t\t<td><i>object_type</i></td>\t\t\t<td><a href='#model-ObjectTypeFilter'>ObjectTypeFilter</a></td>\t\t\t<td>Finds objects by the attribute <i>object type</i>.</td>\t\t\t<td><a href=\"examples/search/filters/example-object-type-filter.json\">Example</a></td>\t\t</tr>\t\t<tr>\t\t\t<td><i>platform</i></td>\t\t\t<td><a href='#model-ObjectPlatformFilter'>ObjectPlatformFilter</a></td>\t\t\t<td>Find objects by the attribute <i>platform</i>.</td>\t\t\t<td><a href=\"examples/search/filters/example-platform-filter.json\">Example</a></td>\t\t</tr>\t\t<tr>\t\t\t<td><i>object_sub_type</i></td>\t\t\t<td><a href='#model-ObjectSubTypeFilter'>ObjectSubTypeFilter</a></td>\t\t\t<td>Find objects by the attribute <i>subtype</i>.</td>\t\t\t<td><a href=\"examples/search/filters/example-object-sub-type-filter.json\">Example</a></td>\t\t</tr>\t</tbody></table>",
          "operationId" : "findObjects",
          "consumes" : [ "application/json" ],
          "produces" : [ "application/json" ],
          "parameters" : [ {
            "in" : "body",
            "name" : "body",
            "required" : false,
            "schema" : {
              "$ref" : "#/definitions/InSearchBody"
            }
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/ResultInfo"
              }
            },
            "400" : {
              "description" : "Bad request - request data is invalid"
            },
            "401" : {
              "description" : "Unauthorized access - login data not valid."
            },
            "403" : {
              "description" : "Forbidden - the user is not allowed to access the resource."
            },
            "404" : {
              "description" : "The resource is not available."
            },
            "405" : {
              "description" : "Method not allowed."
            },
            "500" : {
              "description" : "Internal error occurred."
            }
          }
        },
        "parameters" : [ {
          "name" : "client_id",
          "in" : "path",
          "description" : "Number/ID of the client.",
          "required" : true,
          "type" : "string"
        } ]
      },
      "/{client_id}/system/agentgroups" : {
        "get" : {
          "tags" : [ "system agentgroups", "system" ],
          "operationId" : "list",
          "produces" : [ "application/json" ],
          "responses" : {
            "401" : {
              "description" : "Unauthorized access - login data not valid."
            },
            "403" : {
              "description" : "Forbidden - the user is not allowed to access the resource."
            },
            "404" : {
              "description" : "The resource is not available."
            },
            "405" : {
              "description" : "Method not allowed."
            },
            "500" : {
              "description" : "Internal error occurred."
            },
            "default" : {
              "description" : "successful operation"
            }
          }
        },
        "parameters" : [ {
          "name" : "client_id",
          "in" : "path",
          "description" : "Number/ID of the client.",
          "required" : true,
          "type" : "string"
        } ]
      },
      "/{client_id}/system/agents" : {
        "get" : {
          "tags" : [ "system agents", "system" ],
          "summary" : "Lists all agents that are defined in the system. The returned list contains running and stopped agents.",
          "description" : "",
          "operationId" : "list",
          "produces" : [ "application/json" ],
          "parameters" : [ {
            "name" : "max_results",
            "in" : "query",
            "description" : "Maximum number of executions for a page result set. If this parameter is omitted the default value 50 is applied.",
            "required" : false,
            "type" : "integer",
            "minimum" : 1,
            "format" : "int32",
            "x-example" : 5000
          }, {
            "name" : "name",
            "in" : "query",
            "description" : "Filter after the name of the agent. Supports wildcards (*).",
            "required" : false,
            "type" : "string",
            "x-example" : "WIN01"
          }, {
            "name" : "active",
            "in" : "query",
            "description" : "Filter after running agents.",
            "required" : false,
            "type" : "boolean",
            "x-example" : true
          }, {
            "name" : "ip_address",
            "in" : "query",
            "description" : "Filter after IP address. Supports wildcards (*).",
            "required" : false,
            "type" : "string",
            "x-example" : "10.243.20.155"
          }, {
            "name" : "version",
            "in" : "query",
            "description" : "Filter after the agents version. Supports wildcards (*).",
            "required" : false,
            "type" : "string",
            "x-example" : "12.3.0+low.build.1100"
          }, {
            "name" : "hardware",
            "in" : "query",
            "description" : "Filter after the computer's hardware information. Supports wildcards (*).",
            "required" : false,
            "type" : "string",
            "x-example" : "x86/2/64"
          }, {
            "name" : "software",
            "in" : "query",
            "description" : "Filter after the Computer's operating system. Supports wildcards (*).",
            "required" : false,
            "type" : "string",
            "x-example" : "WinNT"
          }, {
            "name" : "linked",
            "in" : "query",
            "description" : "Filter after agents that are linked to the service manager",
            "required" : false,
            "type" : "boolean",
            "x-example" : "false"
          }, {
            "name" : "platform",
            "in" : "query",
            "description" : "Filter after agent platform (type). Supports wildcards (*).",
            "required" : false,
            "type" : "string",
            "x-example" : "WINDOWS"
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/OutAgentList"
              }
            },
            "400" : {
              "description" : "Bad request - request data is invalid"
            },
            "401" : {
              "description" : "Unauthorized access - login data not valid."
            },
            "403" : {
              "description" : "Forbidden - the user is not allowed to access the resource."
            },
            "404" : {
              "description" : "The resource is not available."
            },
            "405" : {
              "description" : "Method not allowed."
            },
            "500" : {
              "description" : "Internal error occurred."
            }
          }
        },
        "parameters" : [ {
          "name" : "client_id",
          "in" : "path",
          "description" : "Number/ID of the client.",
          "required" : true,
          "type" : "string"
        } ]
      },
      "/{client_id}/system/agents/{object_name}" : {
        "get" : {
          "tags" : [ "system agents", "system" ],
          "summary" : "Returns detailed agent information",
          "description" : "",
          "operationId" : "getAgentDetails",
          "produces" : [ "application/json" ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/OutAgent"
              }
            },
            "400" : {
              "description" : "Bad request - request data is invalid"
            },
            "401" : {
              "description" : "Unauthorized access - login data not valid."
            },
            "403" : {
              "description" : "Forbidden - the user is not allowed to access the resource."
            },
            "404" : {
              "description" : "The resource is not available."
            },
            "405" : {
              "description" : "Method not allowed."
            },
            "500" : {
              "description" : "Internal error occurred."
            }
          }
        },
        "parameters" : [ {
          "name" : "client_id",
          "in" : "path",
          "description" : "Number/ID of the client.",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "object_name",
          "in" : "path",
          "description" : "Name of the object.",
          "required" : true,
          "type" : "string"
        } ]
      },
      "/{client_id}/system/clients" : {
        "get" : {
          "tags" : [ "system clients", "system" ],
          "summary" : "List of clients in the system.",
          "description" : "",
          "operationId" : "list",
          "produces" : [ "application/json" ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/OutClientList"
              }
            },
            "401" : {
              "description" : "Unauthorized access - login data not valid."
            },
            "403" : {
              "description" : "Forbidden - the user is not allowed to access the resource."
            },
            "404" : {
              "description" : "The resource is not available."
            },
            "405" : {
              "description" : "Method not allowed."
            },
            "500" : {
              "description" : "Internal error occurred."
            }
          }
        },
        "parameters" : [ {
          "name" : "client_id",
          "in" : "path",
          "description" : "Number/ID of the client.",
          "required" : true,
          "type" : "string"
        } ]
      },
      "/{client_id}/system/clients/{client_id}" : {
        "delete" : {
          "tags" : [ "system clients", "system" ],
          "summary" : "Delete a client",
          "description" : "",
          "operationId" : "delete",
          "produces" : [ "application/json" ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/OutRunId"
              }
            },
            "400" : {
              "description" : "Bad request - request data is invalid"
            },
            "401" : {
              "description" : "Unauthorized access - login data not valid."
            },
            "403" : {
              "description" : "Forbidden - the user is not allowed to access the resource."
            },
            "404" : {
              "description" : "The resource is not available."
            },
            "405" : {
              "description" : "Method not allowed."
            },
            "500" : {
              "description" : "Internal error occurred."
            }
          }
        },
        "parameters" : [ {
          "name" : "client_id",
          "in" : "path",
          "description" : "Number/ID of the client.",
          "required" : true,
          "type" : "string"
        } ]
      },
      "/{client_id}/system/features" : {
        "get" : {
          "tags" : [ "system" ],
          "summary" : "Retrieve system feature information.",
          "description" : "",
          "operationId" : "getFeatureList",
          "produces" : [ "application/json" ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/definitions/OutSystemFeatureList"
                }
              }
            },
            "401" : {
              "description" : "Unauthorized access - login data not valid."
            },
            "403" : {
              "description" : "Forbidden - the user is not allowed to access the resource."
            },
            "404" : {
              "description" : "The resource is not available."
            },
            "405" : {
              "description" : "Method not allowed."
            },
            "500" : {
              "description" : "Internal error occurred."
            }
          }
        },
        "parameters" : [ {
          "name" : "client_id",
          "in" : "path",
          "description" : "Number/ID of the client.",
          "required" : true,
          "type" : "string"
        } ]
      },
      "/{client_id}/system/health" : {
        "get" : {
          "tags" : [ "system" ],
          "summary" : "Can be used to determine if the automation system is in a healthy state. A system is healthy if there is a PWP and at least one instance of CP and JWP respectively. When healthy, HTTP 200 is returned. When unhealthy, HTTP 503. Note: only use the HTTP status code to determine the health status since the response body is optional.",
          "description" : "",
          "operationId" : "healthCheck",
          "produces" : [ "application/json" ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/OutHealthCheck"
              }
            },
            "401" : {
              "description" : "Unauthorized access - login data not valid."
            },
            "403" : {
              "description" : "Forbidden - the user is not allowed to access the resource."
            },
            "404" : {
              "description" : "The resource is not available."
            },
            "405" : {
              "description" : "Method not allowed."
            },
            "500" : {
              "description" : "Internal error occurred."
            },
            "503" : {
              "description" : "Service Unavailable.",
              "schema" : {
                "$ref" : "#/definitions/OutHealthCheck"
              }
            }
          }
        },
        "parameters" : [ {
          "name" : "client_id",
          "in" : "path",
          "description" : "Number/ID of the client.",
          "required" : true,
          "type" : "string"
        } ]
      },
      "/{client_id}/telemetry/export/{start_from}" : {
        "get" : {
          "tags" : [ "telemetry" ],
          "summary" : "Retrieve telemetry data per month as json for the last n months, including the current month. Only works for client 0.",
          "description" : "Requests for sample use-cases: <br><ul>\t<li><a href=\"examples/telemetry/example-export.txt\">Use Case:</a> Export Telemetry data for last month and this month by setting 'start_from' to 2.</li></ul>",
          "operationId" : "export",
          "produces" : [ "application/json" ],
          "parameters" : [ {
            "name" : "start_from",
            "in" : "path",
            "description" : "Timeframe lower bound to be used for the query.",
            "required" : true,
            "type" : "integer",
            "format" : "int32"
          } ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "type" : "string"
              }
            },
            "401" : {
              "description" : "Unauthorized access - login data not valid."
            },
            "403" : {
              "description" : "Forbidden - the user is not allowed to access the resource."
            },
            "404" : {
              "description" : "The resource is not available."
            },
            "405" : {
              "description" : "Method not allowed."
            },
            "500" : {
              "description" : "Internal error occurred."
            }
          }
        },
        "parameters" : [ {
          "name" : "client_id",
          "in" : "path",
          "description" : "Number/ID of the client.",
          "required" : true,
          "type" : "string"
        } ]
      },
      "/{client_id}/telemetry/products" : {
        "get" : {
          "tags" : [ "telemetry" ],
          "summary" : "Retrieve available products",
          "description" : "",
          "operationId" : "productList",
          "produces" : [ "application/json" ],
          "responses" : {
            "200" : {
              "description" : "successful operation",
              "schema" : {
                "$ref" : "#/definitions/OutTelemetryProductList"
              }
            },
            "401" : {
              "description" : "Unauthorized access - login data not valid."
            },
            "403" : {
              "description" : "Forbidden - the user is not allowed to access the resource."
            },
            "404" : {
              "description" : "The resource is not available."
            },
            "405" : {
              "description" : "Method not allowed."
            },
            "500" : {
              "description" : "Internal error occurred."
            }
          }
        },
        "parameters" : [ {
          "name" : "client_id",
          "in" : "path",
          "description" : "Number/ID of the client.",
          "required" : true,
          "type" : "string"
        } ]
      }
    },
    "definitions" : {
      "AgentFilter" : {
        "allOf" : [ {
          "$ref" : "#/definitions/ObjectContentsFilter"
        }, {
          "type" : "object",
          "required" : [ "filter_identifier" ],
          "properties" : {
            "filter_identifier" : {
              "type" : "string",
              "example" : "object_name",
              "description" : "Identifier of filter to be used.",
              "enum" : [ "identifier", "object_name", "location", "client", "calendar_event", "object_id", "time_frame", "granularity", "variable_key", "archive_key", "variable_value", "title", "process", "documentation", "object_type", "platform", "object_sub_type", "agent", "login" ]
            }
          },
          "description" : "Search in object's agent field (full-text)."
        } ]
      },
      "ArchiveKeysFilter" : {
        "allOf" : [ {
          "$ref" : "#/definitions/ObjectContentsFilter"
        }, {
          "type" : "object",
          "required" : [ "filter_identifier" ],
          "properties" : {
            "filter_identifier" : {
              "type" : "string",
              "example" : "object_name",
              "description" : "Identifier of filter to be used.",
              "enum" : [ "identifier", "object_name", "location", "client", "calendar_event", "object_id", "time_frame", "granularity", "variable_key", "archive_key", "variable_value", "title", "process", "documentation", "object_type", "platform", "object_sub_type", "agent", "login" ]
            }
          },
          "description" : "Filter for object's archive keys."
        } ]
      },
      "BaseTypeMatchObjectTypeFilter" : {
        "allOf" : [ {
          "$ref" : "#/definitions/SearchFilter"
        }, {
          "type" : "object",
          "required" : [ "filter_identifier" ],
          "properties" : {
            "filter_identifier" : {
              "type" : "string",
              "example" : "object_name",
              "description" : "Identifier of filter to be used.",
              "enum" : [ "identifier", "object_name", "location", "client", "calendar_event", "object_id", "time_frame", "granularity", "variable_key", "archive_key", "variable_value", "title", "process", "documentation", "object_type", "platform", "object_sub_type", "agent", "login" ]
            },
            "values" : {
              "type" : "array",
              "description" : "Array of filtered object types / platform / subtypes",
              "items" : {
                "type" : "string"
              }
            }
          }
        } ]
      },
      "CalendarEventFilter" : {
        "allOf" : [ {
          "$ref" : "#/definitions/SearchFilter"
        }, {
          "type" : "object",
          "required" : [ "filter_identifier", "query" ],
          "properties" : {
            "filter_identifier" : {
              "type" : "string",
              "example" : "object_name",
              "description" : "Identifier of filter to be used.",
              "enum" : [ "identifier", "object_name", "location", "client", "calendar_event", "object_id", "time_frame", "granularity", "variable_key", "archive_key", "variable_value", "title", "process", "documentation", "object_type", "platform", "object_sub_type", "agent", "login" ]
            },
            "query" : {
              "type" : "string",
              "example" : "SCRI.NEW.1",
              "description" : "Name of the calendar event (may contain placeholder characters)."
            },
            "valid_on_date" : {
              "type" : "integer",
              "format" : "int64",
              "description" : "As unix timestamp in milliseconds."
            },
            "valid_from_min" : {
              "type" : "integer",
              "format" : "int64",
              "description" : "Filter the validity lower bounds on valid_from (unix timestamp in milliseconds)."
            },
            "valid_from_max" : {
              "type" : "integer",
              "format" : "int64",
              "description" : "Filter the validity upper bounds on valid_from (unix timestamp in milliseconds)."
            },
            "valid_to_min" : {
              "type" : "integer",
              "format" : "int64",
              "description" : "Filter the validity lower bounds on validTo (unix timestamp in milliseconds)."
            },
            "valid_to_max" : {
              "type" : "integer",
              "format" : "int64",
              "description" : "Filter the validity upper bounds on validTo (unix timestamp in milliseconds)."
            },
            "active_on_days_from" : {
              "type" : "integer",
              "format" : "int64",
              "description" : "As unix timestamp in milliseconds."
            },
            "active_on_days_to" : {
              "type" : "integer",
              "format" : "int64",
              "description" : "As unix timestamp in milliseconds."
            },
            "event_types" : {
              "type" : "array",
              "items" : {
                "type" : "string"
              }
            }
          },
          "description" : "Searches for events with the given event name that are valid on the given date."
        } ]
      },
      "CancelOptions" : {
        "type" : "object",
        "properties" : {
          "recursive" : {
            "type" : "boolean",
            "description" : "Consider child tasks if set to true."
          }
        },
        "description" : "Settings for the action: cancel."
      },
      "ClientFilter" : {
        "allOf" : [ {
          "$ref" : "#/definitions/SearchFilter"
        }, {
          "type" : "object",
          "required" : [ "filter_identifier" ],
          "properties" : {
            "filter_identifier" : {
              "type" : "string",
              "example" : "object_name",
              "description" : "Identifier of filter to be used.",
              "enum" : [ "identifier", "object_name", "location", "client", "calendar_event", "object_id", "time_frame", "granularity", "variable_key", "archive_key", "variable_value", "title", "process", "documentation", "object_type", "platform", "object_sub_type", "agent", "login" ]
            },
            "include_client_zero" : {
              "type" : "boolean",
              "description" : "Set to \"true\" if also client 0 should be searched."
            }
          },
          "description" : "Can be used to also search in client 0."
        } ]
      },
      "DocumentationFilter" : {
        "allOf" : [ {
          "$ref" : "#/definitions/ObjectContentsFilter"
        }, {
          "type" : "object",
          "required" : [ "filter_identifier" ],
          "properties" : {
            "filter_identifier" : {
              "type" : "string",
              "example" : "object_name",
              "description" : "Identifier of filter to be used.",
              "enum" : [ "identifier", "object_name", "location", "client", "calendar_event", "object_id", "time_frame", "granularity", "variable_key", "archive_key", "variable_value", "title", "process", "documentation", "object_type", "platform", "object_sub_type", "agent", "login" ]
            }
          },
          "description" : "Search in object's documentation(full-text)."
        } ]
      },
      "GranularityFilter" : {
        "allOf" : [ {
          "$ref" : "#/definitions/SearchFilter"
        }, {
          "type" : "object",
          "required" : [ "filter_identifier" ],
          "properties" : {
            "filter_identifier" : {
              "type" : "string",
              "example" : "object_name",
              "description" : "Identifier of filter to be used.",
              "enum" : [ "identifier", "object_name", "location", "client", "calendar_event", "object_id", "time_frame", "granularity", "variable_key", "archive_key", "variable_value", "title", "process", "documentation", "object_type", "platform", "object_sub_type", "agent", "login" ]
            },
            "granularity" : {
              "type" : "string",
              "enum" : [ "OBJECT", "KEYWORD" ]
            }
          }
        } ]
      },
      "InAddCommentBody" : {
        "type" : "object",
        "required" : [ "comment" ],
        "properties" : {
          "comment" : {
            "type" : "string",
            "example" : "Example comment.",
            "description" : "The comment that should be added to the execution.",
            "minLength" : 0,
            "maxLength" : 1024
          }
        }
      },
      "InCalendarEventListEntry" : {
        "type" : "object",
        "properties" : {
          "calendar" : {
            "type" : "string",
            "description" : "Name of a calendar object."
          },
          "event" : {
            "type" : "string",
            "description" : "Name of a calendar event"
          }
        }
      },
      "InChangeExecutionStatusBody" : {
        "type" : "object",
        "required" : [ "action" ],
        "properties" : {
          "action" : {
            "type" : "string",
            "enum" : [ "restart", "cancel" ]
          },
          "cancel" : {
            "$ref" : "#/definitions/CancelOptions"
          },
          "restart" : {
            "$ref" : "#/definitions/RestartOptions"
          }
        }
      },
      "InCommitParameters" : {
        "type" : "object",
        "required" : [ "message", "objects" ],
        "properties" : {
          "message" : {
            "type" : "string",
            "example" : "Changed Login Object",
            "description" : "Commit message"
          },
          "objects" : {
            "type" : "array",
            "example" : "[{123, \"abc\", \"scri\", \"ADD\"}]",
            "description" : "List of uncommitted objects",
            "items" : {
              "$ref" : "#/definitions/InRepositoryObject"
            },
            "maxItems" : 2147483647,
            "minItems" : 1
          }
        },
        "description" : "Encapsulates an automation engine objects saved into the repository."
      },
      "InCreateBranchParameters" : {
        "type" : "object",
        "required" : [ "branch_name", "commit_id" ],
        "properties" : {
          "commit_id" : {
            "type" : "string",
            "example" : "b094726cc40cf5da7482b9c3f64844c166d9d177",
            "description" : "The commit id to create the branch from"
          },
          "branch_name" : {
            "type" : "string",
            "example" : "feature/add-new-job",
            "description" : "The name of the branch"
          }
        }
      },
      "InExecutionBody" : {
        "type" : "object",
        "required" : [ "execution_option", "object_name" ],
        "properties" : {
          "object_name" : {
            "type" : "string",
            "example" : "SCRI.NEW.1",
            "description" : "Name of the object to be executed."
          },
          "execution_option" : {
            "type" : "string",
            "example" : "execute",
            "description" : "Type of execution.",
            "enum" : [ "execute", "once", "recurring" ]
          },
          "inputs" : {
            "type" : "object",
            "description" : "Optional list of promptsets variables to be passed.",
            "additionalProperties" : {
              "type" : "object"
            }
          },
          "alias" : {
            "type" : "string",
            "example" : "SCRI.NEW.1.MONDAY",
            "description" : "Optional alias object should be executed as."
          },
          "timezone" : {
            "type" : "string",
            "example" : "TZ.MEZ",
            "description" : "Timezone used for the execution date/time and logical date/time."
          },
          "queue" : {
            "type" : "string",
            "example" : "CLIENT_QUEUE",
            "description" : "Queue in which the object should be activated."
          },
          "once" : {
            "$ref" : "#/definitions/InExecutionOnceBody"
          },
          "recurring" : {
            "$ref" : "#/definitions/InExecutionRecurringBody"
          }
        }
      },
      "InExecutionOnceBody" : {
        "type" : "object",
        "properties" : {
          "execution_date_time" : {
            "type" : "string",
            "example" : "2015-04-15T06:37:59Z",
            "description" : "Date and Time when the object should be executed. If no start time has been specified, the object is executed immediately."
          },
          "wait_for_manual_release" : {
            "type" : "boolean",
            "example" : false,
            "description" : "Determinates, if the object should be manually released to start. Only relevant if object is executed immediately (= no start time)."
          },
          "use_logical_time" : {
            "type" : "string",
            "example" : "2015-04-15T06:37:59Z",
            "description" : "Logical Start time for object start."
          }
        },
        "description" : "Settings for the execution option: once."
      },
      "InExecutionRecurringBody" : {
        "type" : "object",
        "properties" : {
          "period_description" : {
            "type" : "string",
            "description" : "Description for the executed period container."
          },
          "start_date" : {
            "type" : "string",
            "example" : "2018-02-18",
            "description" : "Earliest start date of the recurring executions. Required date format: yyyy-MM-dd"
          },
          "end_date" : {
            "type" : "string",
            "example" : "2018-02-19",
            "description" : "End date for the period exeuctions. Must not be specified together with end_after_executions. Required date format: yyyy-MM-dd"
          },
          "end_after_executions" : {
            "type" : "integer",
            "format" : "int32",
            "example" : 5,
            "description" : "End the period container after a specific number of executions. Must not be specified together with end_date."
          },
          "execute_at" : {
            "type" : "string",
            "example" : "23:59",
            "description" : "Start recurring executions at one specific time. Must not be specified together with execute_interval and / or execute_after. Required time format: HH:MM"
          },
          "execute_interval" : {
            "type" : "string",
            "example" : "P12DT7H34M",
            "description" : "Activate executions in specific intervals. Must not be specified together with execute_at and / or execute_after. Required format: PnDTnHnMnS"
          },
          "execute_after" : {
            "type" : "string",
            "example" : "P12DT7H34M",
            "description" : "Time gap between recurring executions. Must not be specified together with execute_at and / or execute_interval. Required format: PnDTnHnMnS"
          },
          "allow_one_overlap" : {
            "type" : "boolean",
            "description" : "Defines if an recurring execution may start, if the previous is still active. Default: false"
          },
          "between_start" : {
            "type" : "string",
            "example" : "12:00",
            "description" : "Start of the timespan for recurring executions. Required format: HH:SS"
          },
          "between_end" : {
            "type" : "string",
            "example" : "15:00",
            "description" : "End of the timespan for recurring executions. Required format: HH:SS"
          },
          "execute_weekly" : {
            "type" : "array",
            "example" : [ "mon", "thu", "sat" ],
            "description" : "List of Weekdays for recurring executions. Must not be used together with execute_calendar_list. Allowed values: 'mon', 'tue', 'wed', 'thu', 'fri', 'sat' and/or 'sun'.",
            "items" : {
              "type" : "string"
            }
          },
          "execute_calendar_match" : {
            "type" : "string",
            "example" : "all",
            "description" : "Condition for calendar event list. Allowed values: 'all', 'none' or 'one'",
            "enum" : [ "one", "none", "all" ]
          },
          "adjust_start_time" : {
            "type" : "boolean",
            "description" : "Defines if adjustment of the start time should be forced on the defined time window."
          },
          "execute_calendar_list" : {
            "type" : "array",
            "example" : [ {
              "calendar" : "CALE.WORKDAYS",
              "event" : "VACATION"
            }, {
              "calendar" : "CALE.BUSY",
              "event" : "JOUR_FIX"
            } ],
            "description" : "Calendar keywords which defines possible days for recurring executions. Must not be used together with execute_weekly.",
            "items" : {
              "$ref" : "#/definitions/InCalendarEventListEntry"
            }
          }
        },
        "description" : "Settings for the execution option: recurring."
      },
      "InForecastBody" : {
        "type" : "object",
        "required" : [ "forecast_option" ],
        "properties" : {
          "forecast_option" : {
            "type" : "string",
            "example" : "object",
            "description" : "Type of forecast.",
            "enum" : [ "object", "execution", "client" ]
          },
          "object" : {
            "$ref" : "#/definitions/InForecastObjectBody"
          },
          "execution" : {
            "$ref" : "#/definitions/InForecastExecutionBody"
          }
        }
      },
      "InForecastDeleteBody" : {
        "type" : "object",
        "required" : [ "ids" ],
        "properties" : {
          "ids" : {
            "type" : "array",
            "example" : [ 100100, 100101 ],
            "description" : "Ids to delete.",
            "uniqueItems" : true,
            "items" : {
              "type" : "integer",
              "format" : "int32"
            }
          },
          "force" : {
            "type" : "boolean",
            "example" : false,
            "description" : "Force deletion of unfinished forecasts."
          }
        }
      },
      "InForecastExecutionBody" : {
        "type" : "object",
        "required" : [ "run_id", "title" ],
        "properties" : {
          "run_id" : {
            "type" : "integer",
            "format" : "int32",
            "example" : 100100,
            "description" : "Id of the execution to be forecasted."
          },
          "days" : {
            "type" : "integer",
            "format" : "int32",
            "example" : 1,
            "description" : "Observation period in days from now until midnight of the last day. Executions running past midnight will be completely forecasted."
          },
          "title" : {
            "type" : "string",
            "description" : "Name of the forecast."
          },
          "ert_group_option" : {
            "type" : "string",
            "example" : "registration",
            "description" : "Set ert calculation option for groups. Default value: registration",
            "enum" : [ "registration", "group", "fixed" ]
          },
          "fixed" : {
            "type" : "integer",
            "format" : "int32",
            "example" : 1,
            "description" : "Fixed ERT value for groups in seconds. Only required if ert_group_option=fixed. Value must be 0 < x < 7200."
          }
        },
        "description" : "Settings for the forecast option: execution."
      },
      "InForecastObjectBody" : {
        "type" : "object",
        "required" : [ "name", "start", "title" ],
        "properties" : {
          "name" : {
            "type" : "string",
            "example" : "SCRI.NEW.1",
            "description" : "Name of the object to forecast."
          },
          "start" : {
            "type" : "string",
            "example" : "2015-04-15T06:37:59Z",
            "description" : "Start Date and Time with which the object should be forecasted."
          },
          "title" : {
            "type" : "string",
            "description" : "Name of the forecast."
          },
          "ert_group_option" : {
            "type" : "string",
            "example" : "group",
            "description" : "Set ert calculation option for groups. Default value: registration",
            "enum" : [ "registration", "group", "fixed" ]
          },
          "fixed" : {
            "type" : "integer",
            "format" : "int32",
            "example" : 1,
            "description" : "Fixed ERT value for groups in seconds. Only required if ert_group_option=fixed. Value must be 0 < x <= 43200."
          }
        },
        "description" : "Settings for the forecast option: object."
      },
      "InHandleConflicts" : {
        "type" : "object",
        "required" : [ "keep", "object_name" ],
        "properties" : {
          "object_name" : {
            "type" : "string",
            "example" : "I.AM.IN.CONFLICT.SCRI",
            "description" : "Name of the conflicting Object."
          },
          "keep" : {
            "type" : "string",
            "example" : "ours",
            "description" : "Which version should be kept. ours= local, theirs= from other branch, both= new Object is created, so both are available for cherry picking.",
            "pattern" : "^(ours|theirs|both)$"
          }
        }
      },
      "InImportObjectBody" : {
        "type" : "object",
        "required" : [ "data" ],
        "properties" : {
          "path" : {
            "type" : "string",
            "example" : "FOLDER/SUBFOLDER",
            "description" : "Path to the automation engine target where the object should be located."
          },
          "data" : {
            "type" : "object",
            "description" : "Serialized object in JSON format.",
            "additionalProperties" : {
              "type" : "object"
            }
          }
        }
      },
      "InMergeParameters" : {
        "type" : "object",
        "required" : [ "branch_name", "commit_automatically" ],
        "properties" : {
          "branch_name" : {
            "type" : "string",
            "example" : "dev",
            "description" : "Which branch should be merged into active branch."
          },
          "commit_automatically" : {
            "type" : "boolean",
            "example" : true,
            "description" : "Automatically commit when there are no conflicts or all are resolved."
          },
          "handle_conflicts" : {
            "type" : "array",
            "description" : "How should conflicts be handled.",
            "items" : {
              "$ref" : "#/definitions/InHandleConflicts"
            }
          }
        }
      },
      "InModifyForecastBody" : {
        "type" : "object",
        "properties" : {
          "title" : {
            "type" : "string"
          }
        }
      },
      "InRepositoryInit" : {
        "type" : "object",
        "required" : [ "branch_name" ],
        "properties" : {
          "force_delete_existing_client" : {
            "type" : "boolean",
            "example" : true,
            "description" : "Flag that indicates that the client should be initialized with an already existing repository. The content of the client (also users) will be deleted and replaced with objects from the client in the existing repository."
          },
          "branch_name" : {
            "type" : "string",
            "example" : "develop",
            "description" : "If forceDeleteExistingClient is false, this is the name of the new branch. Otherwise it is the name of the branch from which should be initialized.Allowed pattern descriped at: https://git-scm.com/docs/git-check-ref-format"
          }
        }
      },
      "InRepositoryObject" : {
        "type" : "object",
        "required" : [ "change_type", "idnr", "oh_name", "oh_type" ],
        "properties" : {
          "idnr" : {
            "type" : "integer",
            "format" : "int32",
            "example" : 1234567,
            "description" : "The idnr of the object."
          },
          "oh_name" : {
            "type" : "string",
            "example" : "TestScript1",
            "description" : "The name of the object."
          },
          "oh_type" : {
            "type" : "string",
            "example" : "SCRI",
            "description" : "The type of the object."
          },
          "change_type" : {
            "type" : "string",
            "example" : "ADD,DELETE,MOVE,RENAME,MODIFY",
            "description" : "How the object changed since its last commit",
            "pattern" : "^(ADD|DELETE|MODIFY|MOVE|RENAME)$"
          }
        }
      },
      "InRepositoryPull" : {
        "type" : "object",
        "required" : [ "overwrite" ],
        "properties" : {
          "overwrite" : {
            "type" : "boolean",
            "example" : true,
            "description" : "If false, will stop the pull incase of conflicts with uncommitted changes. If true, will execute the pull and if necessary, overwrite in AE."
          }
        }
      },
      "InScriptsBody" : {
        "type" : "object",
        "required" : [ "script" ],
        "properties" : {
          "script" : {
            "type" : "string",
            "example" : ":PRINT 'Hello from REST API'",
            "description" : "The AE Script that should be executed.",
            "minLength" : 0,
            "maxLength" : 32000
          },
          "queue" : {
            "type" : "string",
            "example" : "CLIENT_QUEUE",
            "description" : "Name of the queue in which the the script should run."
          }
        }
      },
      "InSearchBody" : {
        "type" : "object",
        "required" : [ "filters" ],
        "properties" : {
          "start_at" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Paging start from index."
          },
          "max_results" : {
            "type" : "integer",
            "format" : "int32",
            "example" : 20,
            "description" : "The maximum number of results the query should return."
          },
          "update_index" : {
            "type" : "boolean",
            "example" : false,
            "description" : "Specifies whether an index update should occur before performing the search"
          },
          "filters" : {
            "type" : "array",
            "description" : "List of filters.",
            "items" : {
              "$ref" : "#/definitions/SearchFilter"
            }
          },
          "sort_columns" : {
            "description" : "Determines sort order of result columns. Pass <i>true</i> to sort ascending, <i>false<i> to sort descending.",
            "$ref" : "#/definitions/InSortColumns"
          }
        }
      },
      "InSortColumns" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "boolean"
          },
          "type" : {
            "type" : "boolean"
          },
          "sub_type" : {
            "type" : "boolean"
          },
          "platform" : {
            "type" : "boolean"
          },
          "title" : {
            "type" : "boolean"
          },
          "archive_key1" : {
            "type" : "boolean"
          },
          "archive_key2" : {
            "type" : "boolean"
          },
          "folder_path" : {
            "type" : "boolean"
          },
          "modified_date" : {
            "type" : "boolean"
          },
          "last_used_date" : {
            "type" : "boolean"
          },
          "creation_date" : {
            "type" : "boolean"
          },
          "calendar_event_name" : {
            "type" : "boolean"
          },
          "calendar_event_ctype" : {
            "type" : "boolean"
          },
          "calendar_event_valid_from" : {
            "type" : "boolean"
          },
          "calendar_event_valid_to" : {
            "type" : "boolean"
          }
        }
      },
      "LocationFilter" : {
        "allOf" : [ {
          "$ref" : "#/definitions/SearchFilter"
        }, {
          "type" : "object",
          "required" : [ "filter_identifier", "location" ],
          "properties" : {
            "filter_identifier" : {
              "type" : "string",
              "example" : "object_name",
              "description" : "Identifier of filter to be used.",
              "enum" : [ "identifier", "object_name", "location", "client", "calendar_event", "object_id", "time_frame", "granularity", "variable_key", "archive_key", "variable_value", "title", "process", "documentation", "object_type", "platform", "object_sub_type", "agent", "login" ]
            },
            "location" : {
              "type" : "string",
              "example" : "\\\\",
              "description" : "The path to which the search should be restricted, using \\\\ as separator"
            },
            "include_links" : {
              "type" : "boolean",
              "example" : false,
              "description" : "Whether links should also be included in the search."
            },
            "include_subfolders" : {
              "type" : "boolean",
              "example" : false,
              "description" : "Whether subfolders of path should be included in the search."
            }
          },
          "description" : "Finds objects by their folder location."
        } ]
      },
      "LoginFilter" : {
        "allOf" : [ {
          "$ref" : "#/definitions/ObjectContentsFilter"
        }, {
          "type" : "object",
          "required" : [ "filter_identifier" ],
          "properties" : {
            "filter_identifier" : {
              "type" : "string",
              "example" : "object_name",
              "description" : "Identifier of filter to be used.",
              "enum" : [ "identifier", "object_name", "location", "client", "calendar_event", "object_id", "time_frame", "granularity", "variable_key", "archive_key", "variable_value", "title", "process", "documentation", "object_type", "platform", "object_sub_type", "agent", "login" ]
            }
          },
          "description" : "Search in object's login field (full-text)."
        } ]
      },
      "ObjectContentsFilter" : {
        "allOf" : [ {
          "$ref" : "#/definitions/SearchFilter"
        }, {
          "type" : "object",
          "required" : [ "filter_identifier" ],
          "properties" : {
            "filter_identifier" : {
              "type" : "string",
              "example" : "object_name",
              "description" : "Identifier of filter to be used.",
              "enum" : [ "identifier", "object_name", "location", "client", "calendar_event", "object_id", "time_frame", "granularity", "variable_key", "archive_key", "variable_value", "title", "process", "documentation", "object_type", "platform", "object_sub_type", "agent", "login" ]
            },
            "query" : {
              "type" : "string",
              "description" : "The search string."
            }
          }
        } ]
      },
      "ObjectIdFilter" : {
        "allOf" : [ {
          "$ref" : "#/definitions/SearchFilter"
        }, {
          "type" : "object",
          "required" : [ "filter_identifier", "object_id" ],
          "properties" : {
            "filter_identifier" : {
              "type" : "string",
              "example" : "object_name",
              "description" : "Identifier of filter to be used.",
              "enum" : [ "identifier", "object_name", "location", "client", "calendar_event", "object_id", "time_frame", "granularity", "variable_key", "archive_key", "variable_value", "title", "process", "documentation", "object_type", "platform", "object_sub_type", "agent", "login" ]
            },
            "object_id" : {
              "type" : "integer",
              "format" : "int32"
            }
          },
          "description" : "Searches for an object with the given id."
        } ]
      },
      "ObjectNameFilter" : {
        "allOf" : [ {
          "$ref" : "#/definitions/SearchFilter"
        }, {
          "type" : "object",
          "required" : [ "filter_identifier", "object_name" ],
          "properties" : {
            "filter_identifier" : {
              "type" : "string",
              "example" : "object_name",
              "description" : "Identifier of filter to be used.",
              "enum" : [ "identifier", "object_name", "location", "client", "calendar_event", "object_id", "time_frame", "granularity", "variable_key", "archive_key", "variable_value", "title", "process", "documentation", "object_type", "platform", "object_sub_type", "agent", "login" ]
            },
            "object_name" : {
              "type" : "string",
              "description" : "The object name to look for including ? and * placeholder signs."
            }
          },
          "description" : "Searches for object names, also supports placeholder signs."
        } ]
      },
      "ObjectPlatformFilter" : {
        "allOf" : [ {
          "$ref" : "#/definitions/BaseTypeMatchObjectTypeFilter"
        }, {
          "type" : "object",
          "required" : [ "filter_identifier" ],
          "properties" : {
            "filter_identifier" : {
              "type" : "string",
              "example" : "object_name",
              "description" : "Identifier of filter to be used.",
              "enum" : [ "identifier", "object_name", "location", "client", "calendar_event", "object_id", "time_frame", "granularity", "variable_key", "archive_key", "variable_value", "title", "process", "documentation", "object_type", "platform", "object_sub_type", "agent", "login" ]
            }
          },
          "description" : "Find objects by the attribute platform."
        } ]
      },
      "ObjectSubTypeFilter" : {
        "allOf" : [ {
          "$ref" : "#/definitions/BaseTypeMatchObjectTypeFilter"
        }, {
          "type" : "object",
          "required" : [ "filter_identifier" ],
          "properties" : {
            "filter_identifier" : {
              "type" : "string",
              "example" : "object_name",
              "description" : "Identifier of filter to be used.",
              "enum" : [ "identifier", "object_name", "location", "client", "calendar_event", "object_id", "time_frame", "granularity", "variable_key", "archive_key", "variable_value", "title", "process", "documentation", "object_type", "platform", "object_sub_type", "agent", "login" ]
            }
          },
          "description" : "Find objects by the attribute subtype."
        } ]
      },
      "ObjectTitleFilter" : {
        "allOf" : [ {
          "$ref" : "#/definitions/ObjectContentsFilter"
        }, {
          "type" : "object",
          "required" : [ "filter_identifier" ],
          "properties" : {
            "filter_identifier" : {
              "type" : "string",
              "example" : "object_name",
              "description" : "Identifier of filter to be used.",
              "enum" : [ "identifier", "object_name", "location", "client", "calendar_event", "object_id", "time_frame", "granularity", "variable_key", "archive_key", "variable_value", "title", "process", "documentation", "object_type", "platform", "object_sub_type", "agent", "login" ]
            }
          },
          "description" : "Search in object titles."
        } ]
      },
      "ObjectTypeFilter" : {
        "allOf" : [ {
          "$ref" : "#/definitions/SearchFilter"
        }, {
          "type" : "object",
          "required" : [ "filter_identifier" ],
          "properties" : {
            "filter_identifier" : {
              "type" : "string",
              "example" : "object_name",
              "description" : "Identifier of filter to be used.",
              "enum" : [ "identifier", "object_name", "location", "client", "calendar_event", "object_id", "time_frame", "granularity", "variable_key", "archive_key", "variable_value", "title", "process", "documentation", "object_type", "platform", "object_sub_type", "agent", "login" ]
            },
            "values" : {
              "type" : "array",
              "description" : "Array of filtered object types / platform / subtypes",
              "items" : {
                "type" : "string"
              }
            }
          },
          "description" : "Finds objects by the attribute object type."
        } ]
      },
      "OutAgent" : {
        "type" : "object",
        "required" : [ "active", "authenticated", "hardware", "jcl_variant", "name", "platform", "port", "software" ],
        "properties" : {
          "active" : {
            "type" : "boolean",
            "example" : true,
            "description" : "<b>True</b> if the Agent is running."
          },
          "name" : {
            "type" : "string",
            "example" : "WIN01",
            "description" : "Name of the Agent."
          },
          "jcl_variant" : {
            "type" : "string",
            "example" : "WINDOWS",
            "description" : "The JCL (Job Control Language) variant."
          },
          "platform" : {
            "type" : "string",
            "example" : "WINDOWS",
            "description" : "The type (HostAttrType) of the agent."
          },
          "authenticated" : {
            "type" : "boolean",
            "example" : true,
            "description" : "<b>True</b> if the agent is authenticated, false otherwise."
          },
          "version" : {
            "type" : "string",
            "example" : "12.3.0+low.build.1100",
            "description" : "The version of the operating system."
          },
          "hardware" : {
            "type" : "string",
            "example" : "x86/2/64",
            "description" : "The computer's hardware information (i.e. system type, number of processors, processor type)."
          },
          "ip_address" : {
            "type" : "string",
            "example" : "10.132.185.65",
            "description" : "The Agent's TCP/IP address."
          },
          "port" : {
            "type" : "integer",
            "format" : "int32",
            "example" : 2302,
            "description" : "The Agent's port number."
          },
          "software" : {
            "type" : "string",
            "example" : "WinNT",
            "description" : "Computer's operating system."
          },
          "workload_max_job" : {
            "type" : "integer",
            "format" : "int32",
            "example" : 100,
            "description" : "The Agent's max job resources. range: (-1:unlimited) to 1000"
          },
          "workload_max_f_t" : {
            "type" : "integer",
            "format" : "int32",
            "example" : 100,
            "description" : "The Agent's max file transfer resources. range: (-1:unlimited) to 1000"
          },
          "linked" : {
            "type" : "boolean"
          }
        }
      },
      "OutAgentList" : {
        "type" : "object",
        "required" : [ "data", "hasmore" ],
        "properties" : {
          "data" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/OutAgent"
            }
          },
          "hasmore" : {
            "type" : "boolean",
            "example" : false,
            "description" : "Indicates if there are more results than currently returned."
          }
        }
      },
      "OutChangeExecutionStatus" : {
        "type" : "object",
        "properties" : {
          "run_id" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "The runId of the restarted execution is returned when invoking /execution/{runId}/restart for the original execution."
          }
        },
        "description" : "Response that is sent when the status of an execution has been changed."
      },
      "OutClient" : {
        "type" : "object",
        "required" : [ "client", "client_active", "mib_monitor", "number_of_activities", "number_of_objects", "number_of_users", "priority", "task_priority" ],
        "properties" : {
          "client" : {
            "type" : "integer",
            "format" : "int32",
            "example" : 100,
            "description" : "Number of the client."
          },
          "client_active" : {
            "type" : "boolean",
            "example" : true,
            "description" : "<b>True</b> if this client is currently active for automatic processing"
          },
          "title" : {
            "type" : "string",
            "example" : "Test client",
            "description" : "Title specified in the Client object."
          },
          "timezone" : {
            "type" : "string",
            "example" : "TZ.CET",
            "description" : "Time zone valid in this client."
          },
          "number_of_objects" : {
            "type" : "integer",
            "format" : "int32",
            "example" : 1000,
            "description" : "Number of objects created in the client."
          },
          "number_of_activities" : {
            "type" : "integer",
            "format" : "int32",
            "example" : 100,
            "description" : "Number of tasks currently being executed."
          },
          "number_of_users" : {
            "type" : "integer",
            "format" : "int32",
            "example" : 10,
            "description" : "Number of users who are currently logged on."
          },
          "mib_monitor" : {
            "type" : "boolean",
            "example" : false,
            "description" : "<b>True</b> if this client is subject to SNMP monitoring."
          },
          "mib_info" : {
            "type" : "string",
            "description" : "MIB information of the client."
          },
          "priority" : {
            "type" : "integer",
            "format" : "int32",
            "example" : 200,
            "description" : "Priority of the client specified in the variable UC_CLIENT_SETTINGS with the key CLIENT_PRIORITY."
          },
          "task_priority" : {
            "type" : "integer",
            "format" : "int32",
            "example" : 200,
            "description" : "Priority of the client's tasks specified in the variable UC_CLIENT_SETTINGS with the TASK_PRIORITY key."
          }
        }
      },
      "OutClientList" : {
        "type" : "object",
        "required" : [ "data", "hasmore", "total" ],
        "properties" : {
          "total" : {
            "type" : "integer",
            "format" : "int32"
          },
          "data" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/OutClient"
            }
          },
          "hasmore" : {
            "type" : "boolean",
            "example" : false,
            "description" : "Indicates if there are more results than currently returned."
          }
        }
      },
      "OutComment" : {
        "type" : "object",
        "required" : [ "comment", "timestamp" ],
        "properties" : {
          "timestamp" : {
            "type" : "string",
            "format" : "date-time",
            "example" : "2017-11-13T13:13:18Z",
            "description" : "Creation timestamp of the comment."
          },
          "comment" : {
            "type" : "string",
            "example" : "good run",
            "description" : "The comment value."
          },
          "user" : {
            "type" : "string",
            "example" : "AUTOMIC/AUTOMIC",
            "description" : "The user that created the comment."
          }
        }
      },
      "OutError" : {
        "type" : "object",
        "required" : [ "code", "details", "error" ],
        "properties" : {
          "code" : {
            "type" : "integer",
            "format" : "int32",
            "example" : 45106,
            "description" : "Error Code."
          },
          "error" : {
            "type" : "string",
            "example" : "The request is invalid and cannot be processed by the Automation Engine.",
            "description" : "Message that roughly describes the error."
          },
          "details" : {
            "type" : "string",
            "example" : "The object to be executed is not an executable one.",
            "description" : "Additional message that describes the error in more detail. If no "
          }
        }
      },
      "OutErtEstimations" : {
        "type" : "object",
        "properties" : {
          "estimated_erts" : {
            "type" : "object",
            "description" : "A map with runId -> estimated time in seconds for the contained tasks.",
            "additionalProperties" : {
              "type" : "integer",
              "format" : "int64"
            }
          },
          "estimated_start_times" : {
            "type" : "object",
            "description" : "A map with runId -> estimated start time in UTC millis for the yet not started tasks.",
            "additionalProperties" : {
              "type" : "integer",
              "format" : "int64"
            }
          },
          "longest_path_vertex_keys" : {
            "type" : "object",
            "description" : "A list that comprises runIds of the longest path",
            "additionalProperties" : {
              "type" : "array",
              "items" : {
                "$ref" : "#/definitions/VertexKey"
              }
            }
          },
          "ert" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "The ERT for the estimated workflow."
          },
          "rrt" : {
            "type" : "integer",
            "format" : "int64",
            "description" : "The RRT for the estimated workflow."
          }
        },
        "description" : "Response that is sent when the ERT of a workflow is recomputed."
      },
      "OutExecution" : {
        "type" : "object",
        "required" : [ "activation_time", "name", "queue", "run_id", "status", "status_text", "type", "user" ],
        "properties" : {
          "name" : {
            "type" : "string",
            "example" : "WIN.START_TOMCAT",
            "description" : "Name of the executed object"
          },
          "type" : {
            "type" : "string",
            "example" : "Job",
            "description" : "Type of the execution.",
            "enum" : [ "AgentGroup Container", "CallAPI", "Cockpit", "Dynamic Job", "Event", "FileTransfer", "Group", "Job", "Notification", "Period Container", "RemoteTaskManager", "Report", "Schedule", "Script", "Workflow" ]
          },
          "queue" : {
            "type" : "string",
            "example" : "CLIENT_QUEUE",
            "description" : "Name of the queue in which the task is executed"
          },
          "run_id" : {
            "type" : "integer",
            "format" : "int32",
            "example" : 2003103,
            "description" : "RunID of the execution"
          },
          "status" : {
            "type" : "integer",
            "format" : "int32",
            "example" : 1900,
            "description" : "Current status of execution"
          },
          "status_text" : {
            "type" : "string",
            "example" : "ENDED_OK - Task ended normally.",
            "description" : "Status text of execution"
          },
          "runtime" : {
            "type" : "integer",
            "format" : "int32",
            "example" : 60,
            "description" : "Total duration in seconds"
          },
          "description" : {
            "type" : "string",
            "example" : "The best task ever",
            "description" : "Description text of the executed object."
          },
          "activation_time" : {
            "type" : "string",
            "format" : "date-time",
            "example" : "2015-04-15T06:37:59Z",
            "description" : "Time the execution was activated."
          },
          "start_time" : {
            "type" : "string",
            "format" : "date-time",
            "example" : "2015-04-15T06:37:59Z",
            "description" : "Time the execution was started."
          },
          "end_time" : {
            "type" : "string",
            "format" : "date-time",
            "example" : "2015-04-15T06:38:59Z",
            "description" : "Time the execution ended."
          },
          "agent" : {
            "type" : "string",
            "example" : "WIN01",
            "description" : "Name of agent that ran the execution (agent related executions only)."
          },
          "platform" : {
            "type" : "string",
            "example" : "WIN64",
            "description" : "Platform of agent that ran the execution (agent related executions only)."
          },
          "parent" : {
            "type" : "integer",
            "format" : "int32",
            "example" : 2003101,
            "description" : "RunID of the parent execution (subordinated tasks only)."
          },
          "reference_run_id" : {
            "type" : "integer",
            "format" : "int32",
            "example" : 2003102,
            "description" : "RunID of the original execution, zero if this was not a restart."
          },
          "user" : {
            "type" : "string",
            "example" : "AUTOMIC/AUTOMIC",
            "description" : "Name of the user (user object) that started the execution."
          },
          "estimated_runtime" : {
            "type" : "integer",
            "format" : "int32",
            "example" : 1,
            "description" : "Estimated runtime of the execution."
          },
          "archive_key1" : {
            "type" : "string",
            "example" : "key1",
            "description" : "Archive key1 for execution"
          },
          "archive_key2" : {
            "type" : "string",
            "example" : "key2",
            "description" : "Archive key2 for execution"
          },
          "title" : {
            "type" : "string",
            "example" : "SCRI.NEW.1",
            "description" : "Title of the execution"
          },
          "alias" : {
            "type" : "string",
            "example" : "SCRI.NEW.1.ALIAS",
            "description" : "Alias of the execution"
          },
          "line_number" : {
            "type" : "integer",
            "format" : "int32",
            "example" : 3,
            "description" : "Line number within the executed workflow."
          },
          "variables" : {
            "type" : "object",
            "description" : "Optional list of variables.",
            "additionalProperties" : {
              "type" : "object"
            }
          },
          "comments" : {
            "type" : "array",
            "description" : "Optional list of comments.",
            "items" : {
              "$ref" : "#/definitions/OutComment"
            }
          },
          "reports" : {
            "type" : "array",
            "description" : "Optional list of reports.",
            "items" : {
              "$ref" : "#/definitions/OutReport"
            }
          },
          "restarts" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Optional number of total restarts."
          },
          "restart_count" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Optional number of this restart."
          },
          "activator_object_type" : {
            "type" : "string",
            "example" : "JOBP",
            "description" : "Start type that describes what caused the execution to be started."
          },
          "predecessors" : {
            "type" : "array",
            "description" : "Optional workflow task predecessors.",
            "items" : {
              "$ref" : "#/definitions/OutPredecessorTaskInfo"
            }
          },
          "recurring" : {
            "description" : "Optional recurring settings.",
            "$ref" : "#/definitions/OutExecutionRecurringBody"
          }
        }
      },
      "OutExecutionList" : {
        "type" : "object",
        "required" : [ "data", "hasmore", "total" ],
        "properties" : {
          "total" : {
            "type" : "integer",
            "format" : "int32",
            "example" : 1,
            "description" : "Determines the total number of items."
          },
          "data" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/OutExecution"
            }
          },
          "hasmore" : {
            "type" : "boolean",
            "example" : false,
            "description" : "Indicates if there are more results than currently returned."
          }
        }
      },
      "OutExecutionRecurringBody" : {
        "type" : "object",
        "properties" : {
          "period_description" : {
            "type" : "string",
            "description" : "Description for the executed period container."
          },
          "start_date" : {
            "type" : "string",
            "example" : "2018-02-18",
            "description" : "Earliest start date of the recurring executions. Date format: yyyy-MM-dd"
          },
          "end_date" : {
            "type" : "string",
            "example" : "2018-02-19",
            "description" : "End date for the period exeuctions. Date format: yyyy-MM-dd"
          },
          "end_after_executions" : {
            "type" : "integer",
            "format" : "int32",
            "example" : 5,
            "description" : "End the period container after a specific number of executions."
          },
          "execute_at" : {
            "type" : "string",
            "example" : "23:59",
            "description" : "Start recurring executions at one specific time. Time format: HH:MM"
          },
          "execute_interval" : {
            "type" : "string",
            "example" : "P12DT7H34M",
            "description" : "Activate executions in specific intervals. Format: PnDTnHnMnS"
          },
          "execute_after" : {
            "type" : "string",
            "example" : "P12DT7H34M",
            "description" : "Time gap between recurring executions. Format: PnDTnHnMnS"
          },
          "allow_one_overlap" : {
            "type" : "boolean",
            "description" : "Defines if an recurring execution may start, if the previous is still active. Default: false"
          },
          "between_start" : {
            "type" : "string",
            "example" : "12:00",
            "description" : "Start of the timespan for recurring executions. Format: HH:SS"
          },
          "between_end" : {
            "type" : "string",
            "example" : "15:00",
            "description" : "End of the timespan for recurring executions. Format: HH:SS"
          },
          "adjust_start_time" : {
            "type" : "boolean",
            "description" : "Defines if adjustment of the start time should be forced on the defined time window."
          },
          "execute_weekly" : {
            "type" : "array",
            "example" : [ "mon", "thu", "sat" ],
            "description" : "List of Weekdays for recurring executions. Allowed values: 'mon', 'tue', 'wed', 'thu', 'fri', 'sat' and/or 'sun'.",
            "items" : {
              "type" : "string"
            }
          },
          "execute_calendar_match" : {
            "type" : "string",
            "example" : "all",
            "description" : "Condition for calendar event list. Allowed values: 'all', 'none' or 'one'",
            "enum" : [ "one", "none", "all" ]
          },
          "execute_calendar_list" : {
            "type" : "array",
            "example" : [ {
              "calendar" : "CALE.WORKDAYS",
              "event" : "VACATION"
            }, {
              "calendar" : "CALE.BUSY",
              "event" : "JOUR_FIX"
            } ],
            "description" : "Calendar events which defines possible days for recurring executions.",
            "items" : {
              "$ref" : "#/definitions/InCalendarEventListEntry"
            }
          },
          "occur_count" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Number of already executed runs."
          }
        },
        "description" : "Settings for the execution option: recurring. All returned dates and times are converted to UTC."
      },
      "OutForecast" : {
        "type" : "object",
        "required" : [ "end_time", "id", "start_time", "status", "status_text", "title", "type", "user" ],
        "properties" : {
          "id" : {
            "type" : "integer",
            "format" : "int32",
            "example" : 2003103,
            "description" : "ID of the forecast."
          },
          "title" : {
            "type" : "string",
            "example" : "FC.SCRI.1",
            "description" : "Title of the forecast."
          },
          "start_time" : {
            "type" : "string",
            "format" : "date-time",
            "example" : "2015-04-15T06:37:59Z",
            "description" : "Start time of the forecast calculation."
          },
          "end_time" : {
            "type" : "string",
            "format" : "date-time",
            "example" : "2015-04-15T06:37:59Z",
            "description" : "End time of the forecast calculation."
          },
          "estimated_start" : {
            "type" : "string",
            "format" : "date-time",
            "example" : "2015-04-15T06:37:59Z",
            "description" : "Logical start time of the forecast."
          },
          "estimated_end" : {
            "type" : "string",
            "format" : "date-time",
            "example" : "2015-04-15T06:37:59Z",
            "description" : "Logical end time of the forecast."
          },
          "status" : {
            "type" : "integer",
            "format" : "int32",
            "example" : 1900,
            "description" : "Status of the forecast calculation."
          },
          "status_text" : {
            "type" : "string",
            "example" : "ENDED_OK - ended normally",
            "description" : "Status text of the forecast calculation."
          },
          "user" : {
            "type" : "string",
            "example" : "UC",
            "description" : "User who started the forecast calculation."
          },
          "last_error_message" : {
            "type" : "string",
            "example" : "Forecast cannot be calculated for object.",
            "description" : "Last error message during forecast calculation."
          },
          "last_error_code" : {
            "type" : "integer",
            "format" : "int32",
            "example" : 45273,
            "description" : "Last error code during forecast calculation."
          },
          "entries" : {
            "type" : "array",
            "description" : "Objects or tasks that were forecasted.",
            "items" : {
              "$ref" : "#/definitions/OutForecastEntry"
            }
          },
          "type" : {
            "type" : "string",
            "example" : "FCST",
            "description" : "Type of the forecast."
          }
        }
      },
      "OutForecastAgent" : {
        "type" : "object",
        "required" : [ "agent", "slots" ],
        "properties" : {
          "agent" : {
            "type" : "string",
            "example" : "WIN01",
            "description" : "Name of the agent."
          },
          "slots" : {
            "type" : "array",
            "description" : "Slots of the agent.",
            "items" : {
              "$ref" : "#/definitions/OutForecastAgentSlot"
            }
          }
        }
      },
      "OutForecastAgentList" : {
        "type" : "object",
        "required" : [ "data", "hasmore", "total" ],
        "properties" : {
          "total" : {
            "type" : "integer",
            "format" : "int32",
            "example" : 1,
            "description" : "Determines the total number of items."
          },
          "data" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/OutForecastAgent"
            }
          },
          "hasmore" : {
            "type" : "boolean",
            "example" : false,
            "description" : "Indicates if there are more results than currently returned."
          }
        }
      },
      "OutForecastAgentSlot" : {
        "type" : "object",
        "properties" : {
          "from" : {
            "type" : "string",
            "format" : "date-time",
            "example" : "2019-10-12T10:00:00Z",
            "description" : "Start time of the slot."
          },
          "to" : {
            "type" : "string",
            "format" : "date-time",
            "example" : "2019-10-12T19:11:34Z",
            "description" : "End time of the slot."
          },
          "duration" : {
            "type" : "string",
            "example" : "PT9H11M34S",
            "description" : "Duration of the slot."
          }
        }
      },
      "OutForecastEntry" : {
        "type" : "object",
        "required" : [ "id", "name", "parent", "type" ],
        "properties" : {
          "id" : {
            "type" : "integer",
            "format" : "int32",
            "example" : 2003103,
            "description" : "ID of the forecast entry."
          },
          "parent" : {
            "type" : "integer",
            "format" : "int32",
            "example" : 2003103,
            "description" : "Parent ID of the forecast entry."
          },
          "name" : {
            "type" : "string",
            "example" : "SCRI.NEW.1",
            "description" : "Name of the forecasted object."
          },
          "type" : {
            "type" : "string",
            "example" : "SCRI",
            "description" : "Type of the forecasted object."
          },
          "container_type" : {
            "type" : "string"
          },
          "estimated_start" : {
            "type" : "string",
            "format" : "date-time",
            "example" : "2015-04-15T06:37:59Z",
            "description" : "Estimated start time of the forecasted object."
          },
          "estimated_end" : {
            "type" : "string",
            "format" : "date-time",
            "example" : "2015-04-15T06:37:59Z",
            "description" : "Estimated end time of the forecasted object."
          },
          "estimated_runtime" : {
            "type" : "integer",
            "format" : "int32",
            "example" : 1,
            "description" : "Estimated run time of the forecasted object in seconds."
          },
          "agent_source" : {
            "type" : "string",
            "example" : "WIN01",
            "description" : "Estimated source agent."
          },
          "agent_destination" : {
            "type" : "string",
            "example" : "UNIX01",
            "description" : "Estimated destination agent."
          },
          "platform_destination" : {
            "type" : "string",
            "example" : "UNIX",
            "description" : "Estimated destination agent platform."
          },
          "status" : {
            "type" : "integer",
            "format" : "int32",
            "example" : 1900,
            "description" : "Estimated status of the forecasted object."
          },
          "status_text" : {
            "type" : "string",
            "example" : "ENDED_OK - ended normally",
            "description" : "Estimated status text of the forecasted object."
          },
          "login_source" : {
            "type" : "string",
            "example" : "LOGIN",
            "description" : "Estimated source login."
          },
          "login_destination" : {
            "type" : "string",
            "example" : "LOGIN",
            "description" : "Estimated destination login."
          }
        }
      },
      "OutForecastId" : {
        "type" : "object",
        "required" : [ "forecast_id" ],
        "properties" : {
          "forecast_id" : {
            "type" : "string"
          }
        }
      },
      "OutForecastList" : {
        "type" : "object",
        "required" : [ "data", "hasmore", "total" ],
        "properties" : {
          "total" : {
            "type" : "integer",
            "format" : "int32",
            "example" : 1,
            "description" : "Determines the total number of items."
          },
          "data" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/OutForecast"
            }
          },
          "hasmore" : {
            "type" : "boolean",
            "example" : false,
            "description" : "Indicates if there are more results than currently returned."
          }
        }
      },
      "OutHealthCheck" : {
        "type" : "object",
        "properties" : {
          "status" : {
            "type" : "string",
            "example" : "UP",
            "description" : "Indicates the overall health of the JCP.",
            "enum" : [ "UP", "DOWN" ]
          },
          "pwp" : {
            "type" : "object",
            "description" : "Indicates the presence of a PWP in the system.",
            "additionalProperties" : {
              "type" : "object"
            }
          },
          "jwp" : {
            "type" : "object",
            "description" : "Indicates the presence of a JWP in the system.",
            "additionalProperties" : {
              "type" : "object"
            }
          },
          "cp" : {
            "type" : "object",
            "description" : "Indicates the presence of a CP in the system.",
            "additionalProperties" : {
              "type" : "object"
            }
          }
        }
      },
      "OutIdList" : {
        "type" : "object",
        "required" : [ "ids" ],
        "properties" : {
          "ids" : {
            "type" : "array",
            "description" : "Set of forecast ids that were not deleted and can only be deleted with force flag set to true.",
            "uniqueItems" : true,
            "items" : {
              "type" : "integer",
              "format" : "int32"
            }
          }
        }
      },
      "OutObject" : {
        "type" : "object",
        "required" : [ "data", "hasmore", "total" ],
        "properties" : {
          "total" : {
            "type" : "integer",
            "format" : "int32",
            "example" : 1,
            "description" : "Determines the total number of items."
          },
          "data" : {
            "type" : "object",
            "description" : "Object data"
          },
          "path" : {
            "type" : "string",
            "description" : "Object path"
          },
          "client" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "Client of the object (current client or zero)"
          },
          "hasmore" : {
            "type" : "boolean",
            "example" : false,
            "description" : "Indicates if there are more results than currently returned."
          }
        }
      },
      "OutObjectReference" : {
        "type" : "object",
        "properties" : {
          "idnr" : {
            "type" : "integer",
            "format" : "int32"
          },
          "name" : {
            "type" : "string"
          },
          "title" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string"
          },
          "platform" : {
            "type" : "string"
          },
          "folderpath" : {
            "type" : "string"
          },
          "lastmodified" : {
            "type" : "string",
            "format" : "date-time"
          },
          "openedby" : {
            "type" : "string"
          },
          "context" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/OutObjectUsageContext"
            }
          }
        }
      },
      "OutObjectUsage" : {
        "type" : "object",
        "properties" : {
          "references" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/OutObjectReference"
            }
          },
          "references_without_a_c_l" : {
            "type" : "boolean"
          },
          "number_of_referencing_objects" : {
            "type" : "integer",
            "format" : "int32"
          },
          "total_number_of_references" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "OutObjectUsageContext" : {
        "type" : "object",
        "properties" : {
          "id" : {
            "type" : "integer",
            "format" : "int32"
          },
          "message" : {
            "type" : "string"
          },
          "insert" : {
            "type" : "string"
          }
        }
      },
      "OutPredecessorTaskInfo" : {
        "type" : "object",
        "required" : [ "run_id" ],
        "properties" : {
          "run_id" : {
            "type" : "integer",
            "format" : "int32",
            "example" : 123456,
            "description" : "RunId of the predecessor task"
          },
          "object_name" : {
            "type" : "string",
            "example" : "JOBS.WIN",
            "description" : "Name of the predecessor task"
          },
          "status" : {
            "type" : "integer",
            "format" : "int32",
            "example" : 1900,
            "description" : "Status of the predecessor task"
          }
        }
      },
      "OutRepo" : {
        "type" : "object",
        "properties" : {
          "active_branch" : {
            "type" : "string",
            "description" : "The name of the currently active branch"
          }
        },
        "description" : "Response that is sent when asked if the repository is created."
      },
      "OutRepoVersionEntry" : {
        "type" : "object",
        "required" : [ "file_name" ],
        "properties" : {
          "file_name" : {
            "type" : "string",
            "example" : "temp/TestScript1.xml",
            "description" : "The file name of the object."
          },
          "change_type" : {
            "type" : "string",
            "example" : "ADD,DELETE,MOVE,RENAME,MODIFY",
            "description" : "How the object changed since its last commit"
          }
        },
        "description" : "Encapsulates an automation engine object processed by the repository."
      },
      "OutReport" : {
        "type" : "object",
        "required" : [ "end_timestamp", "is_db", "is_xml", "type" ],
        "properties" : {
          "end_timestamp" : {
            "type" : "string",
            "format" : "date-time",
            "example" : "2017-11-13T13:13:18Z",
            "description" : "Timestamp when report has been finished"
          },
          "type" : {
            "type" : "string",
            "example" : "REP",
            "description" : "Report type shortcut"
          },
          "is_xml" : {
            "type" : "boolean",
            "example" : false,
            "description" : "Flag if report stored in XML Format"
          },
          "is_db" : {
            "type" : "boolean",
            "example" : true,
            "description" : "Flag if report stored in Database"
          }
        }
      },
      "OutReportContent" : {
        "type" : "object",
        "required" : [ "content", "page" ],
        "properties" : {
          "page" : {
            "type" : "integer",
            "format" : "int32",
            "example" : 1,
            "description" : "Report page number"
          },
          "content" : {
            "type" : "string",
            "example" : "Test output",
            "description" : "Report page content"
          }
        }
      },
      "OutRepositoryCommit" : {
        "type" : "object",
        "required" : [ "client", "number_affected_objects", "permission_missing_for_objects", "status", "version" ],
        "properties" : {
          "client" : {
            "type" : "integer",
            "format" : "int32",
            "example" : 100,
            "description" : "Client for which the repository was initialized."
          },
          "version" : {
            "type" : "string",
            "example" : "3",
            "description" : "Which version the commit created."
          },
          "status" : {
            "type" : "string",
            "example" : "SUCCESS, ERROR_PERMISSIONS etc.",
            "description" : "Result status of the repository call."
          },
          "version_changes" : {
            "type" : "array",
            "example" : "[{temp/fileA,DELETE}, {fileB,ADD}]",
            "description" : "List of file names and change types.",
            "items" : {
              "$ref" : "#/definitions/OutRepoVersionEntry"
            }
          },
          "permission_missing_for_objects" : {
            "type" : "array",
            "example" : "OBJ_A,OBJ_B etc.",
            "description" : "List of object names the user does not have write permission for.",
            "items" : {
              "type" : "string"
            }
          },
          "number_affected_objects" : {
            "type" : "integer",
            "format" : "int32",
            "example" : 100,
            "description" : "Amount of Automation Engine objects which were affected by the repository call."
          },
          "version_title" : {
            "type" : "string"
          }
        },
        "description" : "Returns new version in repository."
      },
      "OutRepositoryDiff" : {
        "type" : "object",
        "required" : [ "object_name" ],
        "properties" : {
          "object_name" : {
            "type" : "string",
            "example" : "I.AM.CONFLICTING.SCRI",
            "description" : "Name of the conflicting object."
          },
          "ours" : {
            "type" : "string",
            "description" : "Content of the local (active) file."
          },
          "theirs" : {
            "type" : "string",
            "description" : "Content of the branch file which gets merged into active branch."
          }
        },
        "description" : "Response of a merge conflict."
      },
      "OutRepositoryHistory" : {
        "type" : "object",
        "required" : [ "data", "hasmore", "is_pull_required", "total" ],
        "properties" : {
          "data" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/OutRepositoryHistoryEntry"
            }
          },
          "total" : {
            "type" : "integer",
            "format" : "int32",
            "example" : 1,
            "description" : "Determines the total number of items."
          },
          "is_pull_required" : {
            "type" : "boolean"
          },
          "hasmore" : {
            "type" : "boolean",
            "example" : false,
            "description" : "Indicates if there are more results than currently returned.",
            "readOnly" : true
          }
        },
        "description" : "Response that retrieves the history for the repository for max_results entries."
      },
      "OutRepositoryHistoryEntry" : {
        "type" : "object",
        "required" : [ "author_name", "date", "id", "is_active", "message" ],
        "properties" : {
          "id" : {
            "type" : "string",
            "example" : "f4964f82ff9b6fcca9ed71519c05d6a29e0b1a00",
            "description" : "Commit ID. For example GIT Hash."
          },
          "author_name" : {
            "type" : "string",
            "example" : "AUTOMIC/AUTOMIC",
            "description" : "Name of the user who committed to the repository."
          },
          "date" : {
            "type" : "string",
            "format" : "date-time",
            "example" : "2018-01-01T11:00:00Z",
            "description" : "Date of the commit."
          },
          "message" : {
            "type" : "string",
            "example" : "Initial commit.",
            "description" : "Commit message."
          },
          "is_active" : {
            "type" : "boolean",
            "example" : true,
            "description" : "Is this commit the latest version imported into the automation engine?"
          }
        }
      },
      "OutRepositoryInit" : {
        "type" : "object",
        "required" : [ "client", "number_affected_objects", "permission_missing_for_objects", "status" ],
        "properties" : {
          "client" : {
            "type" : "integer",
            "format" : "int32",
            "example" : 100,
            "description" : "Client for which the repository was initialized."
          },
          "status" : {
            "type" : "string",
            "example" : "SUCCESS, ERROR_PERMISSIONS etc.",
            "description" : "Result status of the repository call."
          },
          "version_changes" : {
            "type" : "array",
            "example" : "[{temp/fileA,DELETE}, {fileB,ADD}]",
            "description" : "List of file names and change types.",
            "items" : {
              "$ref" : "#/definitions/OutRepoVersionEntry"
            }
          },
          "permission_missing_for_objects" : {
            "type" : "array",
            "example" : "OBJ_A,OBJ_B etc.",
            "description" : "List of object names the user does not have write permission for.",
            "items" : {
              "type" : "string"
            }
          },
          "number_affected_objects" : {
            "type" : "integer",
            "format" : "int32",
            "example" : 100,
            "description" : "Amount of Automation Engine objects which were affected by the repository call."
          },
          "version_title" : {
            "type" : "string"
          }
        },
        "description" : "Response that is sent when the repository is initialized."
      },
      "OutRepositoryMerge" : {
        "type" : "object",
        "required" : [ "status" ],
        "properties" : {
          "status" : {
            "type" : "string",
            "example" : "ok",
            "description" : "Status of the merge."
          },
          "failure_reason" : {
            "type" : "string",
            "example" : "Invalid file paths etc",
            "description" : "Failure reason"
          },
          "conflicting_objects" : {
            "type" : "array",
            "description" : "List of objects with merge conflicts.",
            "items" : {
              "type" : "string"
            }
          },
          "added_objects" : {
            "type" : "array",
            "description" : "List of objects added by the merge.",
            "items" : {
              "type" : "string"
            }
          },
          "modified_objects" : {
            "type" : "array",
            "description" : "List of objects modified by the merge.",
            "items" : {
              "type" : "string"
            }
          },
          "removed_objects" : {
            "type" : "array",
            "description" : "List of objects removed by the merge.",
            "items" : {
              "type" : "string"
            }
          },
          "conflicting_deleted_objects" : {
            "type" : "array",
            "description" : "List of objects removed and edited.",
            "items" : {
              "type" : "string"
            }
          }
        },
        "description" : "Result of a merge operation. Will contain added/changed/removed object names and possible merge conflicts."
      },
      "OutRepositoryObject" : {
        "type" : "object",
        "required" : [ "creation_date", "idnr", "last_user_name", "mod_date", "oh_name", "oh_type" ],
        "properties" : {
          "idnr" : {
            "type" : "integer",
            "format" : "int32",
            "example" : 1234567,
            "description" : "The idnr of the object."
          },
          "oh_name" : {
            "type" : "string",
            "example" : "TestScript1",
            "description" : "The name of the object."
          },
          "oh_type" : {
            "type" : "string",
            "example" : "SCRI",
            "description" : "The type of the object."
          },
          "mod_date" : {
            "type" : "string",
            "format" : "date-time",
            "example" : "2018-03-22 15:03:22.0",
            "description" : "The date of the object's last modification."
          },
          "creation_date" : {
            "type" : "string",
            "format" : "date-time",
            "example" : "2018-03-22 15:03:22.0",
            "description" : "The date of the object's creation."
          },
          "last_user_name" : {
            "type" : "string",
            "example" : "user_a",
            "description" : "The name of the user who last modified the object."
          },
          "archive_key1" : {
            "type" : "string",
            "description" : "The object's archive key."
          },
          "archive_key2" : {
            "type" : "string",
            "description" : "The object's archive key."
          },
          "change_type" : {
            "type" : "string",
            "example" : "ADD,DELETE,MOVE,RENAME,MODIFY",
            "description" : "How the object changed since its last commit"
          }
        },
        "description" : "Encapsulates an automation engine object processed by the repository."
      },
      "OutRepositoryRollback" : {
        "type" : "object",
        "required" : [ "client", "number_affected_objects", "permission_missing_for_objects", "status", "version" ],
        "properties" : {
          "client" : {
            "type" : "integer",
            "format" : "int32",
            "example" : 100,
            "description" : "Client for which the repository was initialized."
          },
          "version" : {
            "type" : "string",
            "example" : "3",
            "description" : "Version to which is rolled back."
          },
          "status" : {
            "type" : "string",
            "example" : "SUCCESS, ERROR_PERMISSIONS etc.",
            "description" : "Result status of the repository call."
          },
          "version_changes" : {
            "type" : "array",
            "example" : "[{temp/fileA,DELETE}, {fileB,ADD}]",
            "description" : "List of file names and change types.",
            "items" : {
              "$ref" : "#/definitions/OutRepoVersionEntry"
            }
          },
          "permission_missing_for_objects" : {
            "type" : "array",
            "example" : "OBJ_A,OBJ_B etc.",
            "description" : "List of object names the user does not have write permission for.",
            "items" : {
              "type" : "string"
            }
          },
          "number_affected_objects" : {
            "type" : "integer",
            "format" : "int32",
            "example" : 100,
            "description" : "Amount of Automation Engine objects which were affected by the repository call."
          },
          "version_title" : {
            "type" : "string"
          }
        },
        "description" : "Response that is sent when the automation engine is rolled back."
      },
      "OutRepositoryUncommittedChanges" : {
        "type" : "object",
        "required" : [ "total" ],
        "properties" : {
          "total" : {
            "type" : "integer",
            "format" : "int32",
            "description" : "How many uncommitted changes does the client have."
          },
          "data" : {
            "type" : "array",
            "description" : "List of objects that have uncommitted changes",
            "items" : {
              "$ref" : "#/definitions/OutRepositoryObject"
            }
          }
        },
        "description" : "Response that is sent for the check how many automation engine objects have been changed and not yet committed."
      },
      "OutRunId" : {
        "type" : "object",
        "required" : [ "run_id" ],
        "properties" : {
          "run_id" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      },
      "OutSystemFeature" : {
        "type" : "object",
        "required" : [ "available", "identifier" ],
        "properties" : {
          "identifier" : {
            "type" : "string",
            "example" : "SAMPLE_FEATURE",
            "description" : "The System Features identifier"
          },
          "available" : {
            "type" : "boolean",
            "description" : "Indicates if the Feature is available or not"
          }
        }
      },
      "OutSystemFeatureList" : {
        "type" : "object",
        "required" : [ "features", "total" ],
        "properties" : {
          "features" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/OutSystemFeature"
            }
          },
          "total" : {
            "type" : "integer",
            "format" : "int32",
            "example" : 1,
            "description" : "Total number of features."
          }
        }
      },
      "OutTelemetryProduct" : {
        "type" : "object",
        "required" : [ "description", "name" ],
        "properties" : {
          "name" : {
            "type" : "string",
            "example" : "AWA",
            "description" : "The telemetry products name"
          },
          "description" : {
            "type" : "string",
            "example" : "CA Automic Workload Automation",
            "description" : "The telemetry products description"
          }
        }
      },
      "OutTelemetryProductList" : {
        "type" : "object",
        "required" : [ "products" ],
        "properties" : {
          "products" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/OutTelemetryProduct"
            }
          }
        }
      },
      "OutTimeZoneInfo" : {
        "type" : "object",
        "properties" : {
          "name" : {
            "type" : "string",
            "example" : "TZ.CET.1",
            "description" : "The name of the time zone object."
          },
          "client" : {
            "type" : "integer",
            "format" : "int32",
            "example" : 0,
            "description" : "Client of the time zone object"
          },
          "offset_to_u_tc" : {
            "type" : "string",
            "example" : "120",
            "description" : "Offset to UTC right now."
          }
        },
        "description" : "Details of a time zone."
      },
      "OutValidationError" : {
        "type" : "object",
        "required" : [ "code", "error", "invalid_value", "path" ],
        "properties" : {
          "code" : {
            "type" : "integer",
            "format" : "int32",
            "example" : 45113,
            "description" : "Error Code."
          },
          "error" : {
            "type" : "string",
            "example" : "Given string is not a valid object name.",
            "description" : "Message that roughly describes the error."
          },
          "path" : {
            "type" : "string",
            "example" : "object_name",
            "description" : "The full path of the invalid property."
          },
          "invalid_value" : {
            "type" : "object",
            "example" : "null",
            "description" : "The invalid value."
          }
        }
      },
      "ProcessSheetFilter" : {
        "allOf" : [ {
          "$ref" : "#/definitions/ObjectContentsFilter"
        }, {
          "type" : "object",
          "required" : [ "filter_identifier" ],
          "properties" : {
            "filter_identifier" : {
              "type" : "string",
              "example" : "object_name",
              "description" : "Identifier of filter to be used.",
              "enum" : [ "identifier", "object_name", "location", "client", "calendar_event", "object_id", "time_frame", "granularity", "variable_key", "archive_key", "variable_value", "title", "process", "documentation", "object_type", "platform", "object_sub_type", "agent", "login" ]
            }
          },
          "description" : "Search in scripts of the process sheet (full-text)."
        } ]
      },
      "RestartOptions" : {
        "type" : "object",
        "properties" : {
          "queue" : {
            "type" : "string",
            "example" : "CLIENT_QUEUE",
            "description" : "Queue in which the object should be activated."
          },
          "restart_point" : {
            "type" : "string",
            "example" : "RP1",
            "description" : "Defined point in Automic script where to restart execution.",
            "minLength" : 0,
            "maxLength" : 8
          },
          "keep_start_type" : {
            "type" : "boolean",
            "example" : false,
            "description" : "Set true if you want the task to keep its start type. For example, if a group has been assigned to the object, restarting will take place within the group."
          },
          "wait_for_manual_release" : {
            "type" : "boolean",
            "example" : false,
            "description" : "Execution waits to be released before actual execution."
          },
          "inputs" : {
            "type" : "object",
            "description" : "Optional list of promptsets variables to be passed.",
            "additionalProperties" : {
              "type" : "object"
            }
          }
        },
        "description" : "Settings for the action: restart."
      },
      "ResultInfo" : {
        "type" : "object",
        "properties" : {
          "total" : {
            "type" : "integer",
            "format" : "int32"
          },
          "data" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/definitions/SearchResult"
            }
          },
          "update_timestamp" : {
            "type" : "integer",
            "format" : "int64"
          },
          "indexing_in_progress" : {
            "type" : "boolean"
          },
          "hasmore" : {
            "type" : "boolean"
          }
        }
      },
      "SearchFilter" : {
        "type" : "object",
        "required" : [ "filter_identifier" ],
        "properties" : {
          "filter_identifier" : {
            "type" : "string",
            "example" : "object_name",
            "description" : "Identifier of filter to be used.",
            "enum" : [ "identifier", "object_name", "location", "client", "calendar_event", "object_id", "time_frame", "granularity", "variable_key", "archive_key", "variable_value", "title", "process", "documentation", "object_type", "platform", "object_sub_type", "agent", "login" ]
          }
        }
      },
      "SearchResult" : {
        "type" : "object",
        "properties" : {
          "creation_date" : {
            "type" : "integer",
            "format" : "int64"
          },
          "references" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "platform" : {
            "type" : "string"
          },
          "link" : {
            "type" : "boolean"
          },
          "title" : {
            "type" : "string"
          },
          "last_used_date" : {
            "type" : "integer",
            "format" : "int64"
          },
          "score" : {
            "type" : "number",
            "format" : "float"
          },
          "calendar_event_name" : {
            "type" : "string"
          },
          "calendar_event_valid_from" : {
            "type" : "integer",
            "format" : "int64"
          },
          "calendar_event_valid_to" : {
            "type" : "integer",
            "format" : "int64"
          },
          "calendar_event_child_calendar_names" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          },
          "login" : {
            "type" : "string"
          },
          "calendar_event_c_type" : {
            "type" : "string"
          },
          "folder_path" : {
            "type" : "string"
          },
          "client" : {
            "type" : "string"
          },
          "agent" : {
            "type" : "string"
          },
          "archive_key1" : {
            "type" : "string"
          },
          "archive_key2" : {
            "type" : "string"
          },
          "sub_type" : {
            "type" : "string"
          },
          "folder_id" : {
            "type" : "string"
          },
          "modified_date" : {
            "type" : "integer",
            "format" : "int64"
          },
          "name" : {
            "type" : "string"
          },
          "id" : {
            "type" : "string"
          },
          "type" : {
            "type" : "string"
          }
        }
      },
      "TimeFrameFilter" : {
        "allOf" : [ {
          "$ref" : "#/definitions/SearchFilter"
        }, {
          "type" : "object",
          "required" : [ "filter_identifier", "type" ],
          "properties" : {
            "filter_identifier" : {
              "type" : "string",
              "example" : "object_name",
              "description" : "Identifier of filter to be used.",
              "enum" : [ "identifier", "object_name", "location", "client", "calendar_event", "object_id", "time_frame", "granularity", "variable_key", "archive_key", "variable_value", "title", "process", "documentation", "object_type", "platform", "object_sub_type", "agent", "login" ]
            },
            "type" : {
              "type" : "string",
              "enum" : [ "CREATED", "MODIFIED", "USED" ]
            },
            "from" : {
              "type" : "integer",
              "format" : "int64",
              "description" : "The start of the timeframe"
            },
            "until" : {
              "type" : "integer",
              "format" : "int64",
              "description" : "The end of the timeframe"
            }
          },
          "description" : "Searches for objects that were created create/modified/used within the given time frame."
        } ]
      },
      "VaraKeyFilter" : {
        "allOf" : [ {
          "$ref" : "#/definitions/ObjectContentsFilter"
        }, {
          "type" : "object",
          "required" : [ "filter_identifier" ],
          "properties" : {
            "filter_identifier" : {
              "type" : "string",
              "example" : "object_name",
              "description" : "Identifier of filter to be used.",
              "enum" : [ "identifier", "object_name", "location", "client", "calendar_event", "object_id", "time_frame", "granularity", "variable_key", "archive_key", "variable_value", "title", "process", "documentation", "object_type", "platform", "object_sub_type", "agent", "login" ]
            }
          },
          "description" : "Searches for variable keys inside of STATIC VARA objects."
        } ]
      },
      "VaraValueFilter" : {
        "allOf" : [ {
          "$ref" : "#/definitions/ObjectContentsFilter"
        }, {
          "type" : "object",
          "required" : [ "filter_identifier" ],
          "properties" : {
            "filter_identifier" : {
              "type" : "string",
              "example" : "object_name",
              "description" : "Identifier of filter to be used.",
              "enum" : [ "identifier", "object_name", "location", "client", "calendar_event", "object_id", "time_frame", "granularity", "variable_key", "archive_key", "variable_value", "title", "process", "documentation", "object_type", "platform", "object_sub_type", "agent", "login" ]
            },
            "all_columns" : {
              "type" : "boolean"
            },
            "type" : {
              "type" : "string",
              "enum" : [ "ANY", "TEXT", "NUMBER", "DATE", "TIME", "DATETIME" ]
            }
          },
          "description" : "Searches for variable values inside of STATIC VARA objects."
        } ]
      },
      "VertexKey" : {
        "type" : "object",
        "properties" : {
          "parent_run_id" : {
            "type" : "integer",
            "format" : "int32"
          },
          "run_id" : {
            "type" : "integer",
            "format" : "int32"
          },
          "lnr" : {
            "type" : "integer",
            "format" : "int32"
          },
          "child_loop_index" : {
            "type" : "integer",
            "format" : "int32"
          }
        }
      }
    }
  }